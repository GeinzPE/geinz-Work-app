// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomDialogTiendasFiltradoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioButton AbiertoEstado;

  @NonNull
  public final RadioButton CerradoEstado;

  @NonNull
  public final TextView FiltradoLocalidad;

  @NonNull
  public final RadioGroup GrupoEstado;

  @NonNull
  public final RadioGroup GurpoEstrellas;

  @NonNull
  public final RadioGroup GurpoSeguidores;

  @NonNull
  public final RadioButton TiendaFisica;

  @NonNull
  public final RadioButton TiendaVirtual;

  @NonNull
  public final RadioButton TodosEstrellas;

  @NonNull
  public final RadioButton TodosSeguidores;

  @NonNull
  public final Button btnApply;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final AutoCompleteTextView categoria;

  @NonNull
  public final BottomSheetDragHandleView cerrar;

  @NonNull
  public final EditText direccion;

  @NonNull
  public final TextView latitudUSer;

  @NonNull
  public final LinearLayout linealubiActual;

  @NonNull
  public final TextView longituduser;

  @NonNull
  public final RadioButton masEstrellas;

  @NonNull
  public final RadioButton masSeguidores;

  @NonNull
  public final TextInputLayout numeropersonasint;

  @NonNull
  public final ImageButton obtenerLocalizacion;

  @NonNull
  public final RadioGroup tipoTienda;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final AutoCompleteTextView zona;

  private CustomDialogTiendasFiltradoBinding(@NonNull LinearLayout rootView,
      @NonNull RadioButton AbiertoEstado, @NonNull RadioButton CerradoEstado,
      @NonNull TextView FiltradoLocalidad, @NonNull RadioGroup GrupoEstado,
      @NonNull RadioGroup GurpoEstrellas, @NonNull RadioGroup GurpoSeguidores,
      @NonNull RadioButton TiendaFisica, @NonNull RadioButton TiendaVirtual,
      @NonNull RadioButton TodosEstrellas, @NonNull RadioButton TodosSeguidores,
      @NonNull Button btnApply, @NonNull Button btnCancel, @NonNull AutoCompleteTextView categoria,
      @NonNull BottomSheetDragHandleView cerrar, @NonNull EditText direccion,
      @NonNull TextView latitudUSer, @NonNull LinearLayout linealubiActual,
      @NonNull TextView longituduser, @NonNull RadioButton masEstrellas,
      @NonNull RadioButton masSeguidores, @NonNull TextInputLayout numeropersonasint,
      @NonNull ImageButton obtenerLocalizacion, @NonNull RadioGroup tipoTienda,
      @NonNull TextView tvTitle, @NonNull AutoCompleteTextView zona) {
    this.rootView = rootView;
    this.AbiertoEstado = AbiertoEstado;
    this.CerradoEstado = CerradoEstado;
    this.FiltradoLocalidad = FiltradoLocalidad;
    this.GrupoEstado = GrupoEstado;
    this.GurpoEstrellas = GurpoEstrellas;
    this.GurpoSeguidores = GurpoSeguidores;
    this.TiendaFisica = TiendaFisica;
    this.TiendaVirtual = TiendaVirtual;
    this.TodosEstrellas = TodosEstrellas;
    this.TodosSeguidores = TodosSeguidores;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.categoria = categoria;
    this.cerrar = cerrar;
    this.direccion = direccion;
    this.latitudUSer = latitudUSer;
    this.linealubiActual = linealubiActual;
    this.longituduser = longituduser;
    this.masEstrellas = masEstrellas;
    this.masSeguidores = masSeguidores;
    this.numeropersonasint = numeropersonasint;
    this.obtenerLocalizacion = obtenerLocalizacion;
    this.tipoTienda = tipoTienda;
    this.tvTitle = tvTitle;
    this.zona = zona;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomDialogTiendasFiltradoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomDialogTiendasFiltradoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_dialog_tiendas_filtrado, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomDialogTiendasFiltradoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AbiertoEstado;
      RadioButton AbiertoEstado = ViewBindings.findChildViewById(rootView, id);
      if (AbiertoEstado == null) {
        break missingId;
      }

      id = R.id.CerradoEstado;
      RadioButton CerradoEstado = ViewBindings.findChildViewById(rootView, id);
      if (CerradoEstado == null) {
        break missingId;
      }

      id = R.id.FiltradoLocalidad;
      TextView FiltradoLocalidad = ViewBindings.findChildViewById(rootView, id);
      if (FiltradoLocalidad == null) {
        break missingId;
      }

      id = R.id.GrupoEstado;
      RadioGroup GrupoEstado = ViewBindings.findChildViewById(rootView, id);
      if (GrupoEstado == null) {
        break missingId;
      }

      id = R.id.GurpoEstrellas;
      RadioGroup GurpoEstrellas = ViewBindings.findChildViewById(rootView, id);
      if (GurpoEstrellas == null) {
        break missingId;
      }

      id = R.id.GurpoSeguidores;
      RadioGroup GurpoSeguidores = ViewBindings.findChildViewById(rootView, id);
      if (GurpoSeguidores == null) {
        break missingId;
      }

      id = R.id.TiendaFisica;
      RadioButton TiendaFisica = ViewBindings.findChildViewById(rootView, id);
      if (TiendaFisica == null) {
        break missingId;
      }

      id = R.id.TiendaVirtual;
      RadioButton TiendaVirtual = ViewBindings.findChildViewById(rootView, id);
      if (TiendaVirtual == null) {
        break missingId;
      }

      id = R.id.TodosEstrellas;
      RadioButton TodosEstrellas = ViewBindings.findChildViewById(rootView, id);
      if (TodosEstrellas == null) {
        break missingId;
      }

      id = R.id.TodosSeguidores;
      RadioButton TodosSeguidores = ViewBindings.findChildViewById(rootView, id);
      if (TodosSeguidores == null) {
        break missingId;
      }

      id = R.id.btnApply;
      Button btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.categoria;
      AutoCompleteTextView categoria = ViewBindings.findChildViewById(rootView, id);
      if (categoria == null) {
        break missingId;
      }

      id = R.id.cerrar;
      BottomSheetDragHandleView cerrar = ViewBindings.findChildViewById(rootView, id);
      if (cerrar == null) {
        break missingId;
      }

      id = R.id.direccion;
      EditText direccion = ViewBindings.findChildViewById(rootView, id);
      if (direccion == null) {
        break missingId;
      }

      id = R.id.latitudUSer;
      TextView latitudUSer = ViewBindings.findChildViewById(rootView, id);
      if (latitudUSer == null) {
        break missingId;
      }

      id = R.id.linealubiActual;
      LinearLayout linealubiActual = ViewBindings.findChildViewById(rootView, id);
      if (linealubiActual == null) {
        break missingId;
      }

      id = R.id.longituduser;
      TextView longituduser = ViewBindings.findChildViewById(rootView, id);
      if (longituduser == null) {
        break missingId;
      }

      id = R.id.masEstrellas;
      RadioButton masEstrellas = ViewBindings.findChildViewById(rootView, id);
      if (masEstrellas == null) {
        break missingId;
      }

      id = R.id.masSeguidores;
      RadioButton masSeguidores = ViewBindings.findChildViewById(rootView, id);
      if (masSeguidores == null) {
        break missingId;
      }

      id = R.id.numeropersonasint;
      TextInputLayout numeropersonasint = ViewBindings.findChildViewById(rootView, id);
      if (numeropersonasint == null) {
        break missingId;
      }

      id = R.id.obtenerLocalizacion;
      ImageButton obtenerLocalizacion = ViewBindings.findChildViewById(rootView, id);
      if (obtenerLocalizacion == null) {
        break missingId;
      }

      id = R.id.tipoTienda;
      RadioGroup tipoTienda = ViewBindings.findChildViewById(rootView, id);
      if (tipoTienda == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.zona;
      AutoCompleteTextView zona = ViewBindings.findChildViewById(rootView, id);
      if (zona == null) {
        break missingId;
      }

      return new CustomDialogTiendasFiltradoBinding((LinearLayout) rootView, AbiertoEstado,
          CerradoEstado, FiltradoLocalidad, GrupoEstado, GurpoEstrellas, GurpoSeguidores,
          TiendaFisica, TiendaVirtual, TodosEstrellas, TodosSeguidores, btnApply, btnCancel,
          categoria, cerrar, direccion, latitudUSer, linealubiActual, longituduser, masEstrellas,
          masSeguidores, numeropersonasint, obtenerLocalizacion, tipoTienda, tvTitle, zona);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
