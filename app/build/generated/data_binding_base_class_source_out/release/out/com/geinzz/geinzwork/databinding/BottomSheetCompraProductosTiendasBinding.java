// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetCompraProductosTiendasBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final NestedScrollView Scrollview;

  @NonNull
  public final TextView TipoTienda;

  @NonNull
  public final Button btnApply;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final BottomSheetDragHandleView cerrar;

  @NonNull
  public final TextView delivery;

  @NonNull
  public final IncludeDireccionEnviosBinding direccionEnvios;

  @NonNull
  public final TextView idTienda;

  @NonNull
  public final LinearLayout infoTiendaSelect;

  @NonNull
  public final TextView localidadTienda;

  @NonNull
  public final AutoCompleteTextView localidadUser;

  @NonNull
  public final IncludeMetodosEntregaBinding metodoEntrega;

  @NonNull
  public final IncludeMetodosPagoBinding metodoPagos;

  @NonNull
  public final TextView nombreTienda;

  @NonNull
  public final EditText nombreUser;

  @NonNull
  public final TextInputLayout nombreint;

  @NonNull
  public final EditText numeroContacto;

  @NonNull
  public final TextInputLayout numeroint;

  @NonNull
  public final AutoCompleteTextView tiendaCancelar;

  @NonNull
  public final IncludeTotalPagarBinding totalPagar;

  @NonNull
  public final TextView tvTitle;

  private BottomSheetCompraProductosTiendasBinding(@NonNull LinearLayout rootView,
      @NonNull NestedScrollView Scrollview, @NonNull TextView TipoTienda, @NonNull Button btnApply,
      @NonNull Button btnCancel, @NonNull BottomSheetDragHandleView cerrar,
      @NonNull TextView delivery, @NonNull IncludeDireccionEnviosBinding direccionEnvios,
      @NonNull TextView idTienda, @NonNull LinearLayout infoTiendaSelect,
      @NonNull TextView localidadTienda, @NonNull AutoCompleteTextView localidadUser,
      @NonNull IncludeMetodosEntregaBinding metodoEntrega,
      @NonNull IncludeMetodosPagoBinding metodoPagos, @NonNull TextView nombreTienda,
      @NonNull EditText nombreUser, @NonNull TextInputLayout nombreint,
      @NonNull EditText numeroContacto, @NonNull TextInputLayout numeroint,
      @NonNull AutoCompleteTextView tiendaCancelar, @NonNull IncludeTotalPagarBinding totalPagar,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.Scrollview = Scrollview;
    this.TipoTienda = TipoTienda;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.cerrar = cerrar;
    this.delivery = delivery;
    this.direccionEnvios = direccionEnvios;
    this.idTienda = idTienda;
    this.infoTiendaSelect = infoTiendaSelect;
    this.localidadTienda = localidadTienda;
    this.localidadUser = localidadUser;
    this.metodoEntrega = metodoEntrega;
    this.metodoPagos = metodoPagos;
    this.nombreTienda = nombreTienda;
    this.nombreUser = nombreUser;
    this.nombreint = nombreint;
    this.numeroContacto = numeroContacto;
    this.numeroint = numeroint;
    this.tiendaCancelar = tiendaCancelar;
    this.totalPagar = totalPagar;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetCompraProductosTiendasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetCompraProductosTiendasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_compra_productos_tiendas, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetCompraProductosTiendasBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Scrollview;
      NestedScrollView Scrollview = ViewBindings.findChildViewById(rootView, id);
      if (Scrollview == null) {
        break missingId;
      }

      id = R.id.TipoTienda;
      TextView TipoTienda = ViewBindings.findChildViewById(rootView, id);
      if (TipoTienda == null) {
        break missingId;
      }

      id = R.id.btnApply;
      Button btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.cerrar;
      BottomSheetDragHandleView cerrar = ViewBindings.findChildViewById(rootView, id);
      if (cerrar == null) {
        break missingId;
      }

      id = R.id.delivery;
      TextView delivery = ViewBindings.findChildViewById(rootView, id);
      if (delivery == null) {
        break missingId;
      }

      id = R.id.direccionEnvios;
      View direccionEnvios = ViewBindings.findChildViewById(rootView, id);
      if (direccionEnvios == null) {
        break missingId;
      }
      IncludeDireccionEnviosBinding binding_direccionEnvios = IncludeDireccionEnviosBinding.bind(direccionEnvios);

      id = R.id.idTienda;
      TextView idTienda = ViewBindings.findChildViewById(rootView, id);
      if (idTienda == null) {
        break missingId;
      }

      id = R.id.infoTiendaSelect;
      LinearLayout infoTiendaSelect = ViewBindings.findChildViewById(rootView, id);
      if (infoTiendaSelect == null) {
        break missingId;
      }

      id = R.id.localidadTienda;
      TextView localidadTienda = ViewBindings.findChildViewById(rootView, id);
      if (localidadTienda == null) {
        break missingId;
      }

      id = R.id.localidadUser;
      AutoCompleteTextView localidadUser = ViewBindings.findChildViewById(rootView, id);
      if (localidadUser == null) {
        break missingId;
      }

      id = R.id.metodo_entrega;
      View metodoEntrega = ViewBindings.findChildViewById(rootView, id);
      if (metodoEntrega == null) {
        break missingId;
      }
      IncludeMetodosEntregaBinding binding_metodoEntrega = IncludeMetodosEntregaBinding.bind(metodoEntrega);

      id = R.id.metodo_pagos;
      View metodoPagos = ViewBindings.findChildViewById(rootView, id);
      if (metodoPagos == null) {
        break missingId;
      }
      IncludeMetodosPagoBinding binding_metodoPagos = IncludeMetodosPagoBinding.bind(metodoPagos);

      id = R.id.nombreTienda;
      TextView nombreTienda = ViewBindings.findChildViewById(rootView, id);
      if (nombreTienda == null) {
        break missingId;
      }

      id = R.id.nombreUser;
      EditText nombreUser = ViewBindings.findChildViewById(rootView, id);
      if (nombreUser == null) {
        break missingId;
      }

      id = R.id.nombreint;
      TextInputLayout nombreint = ViewBindings.findChildViewById(rootView, id);
      if (nombreint == null) {
        break missingId;
      }

      id = R.id.numeroContacto;
      EditText numeroContacto = ViewBindings.findChildViewById(rootView, id);
      if (numeroContacto == null) {
        break missingId;
      }

      id = R.id.numeroint;
      TextInputLayout numeroint = ViewBindings.findChildViewById(rootView, id);
      if (numeroint == null) {
        break missingId;
      }

      id = R.id.tiendaCancelar;
      AutoCompleteTextView tiendaCancelar = ViewBindings.findChildViewById(rootView, id);
      if (tiendaCancelar == null) {
        break missingId;
      }

      id = R.id.totalPagar;
      View totalPagar = ViewBindings.findChildViewById(rootView, id);
      if (totalPagar == null) {
        break missingId;
      }
      IncludeTotalPagarBinding binding_totalPagar = IncludeTotalPagarBinding.bind(totalPagar);

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new BottomSheetCompraProductosTiendasBinding((LinearLayout) rootView, Scrollview,
          TipoTienda, btnApply, btnCancel, cerrar, delivery, binding_direccionEnvios, idTienda,
          infoTiendaSelect, localidadTienda, localidadUser, binding_metodoEntrega,
          binding_metodoPagos, nombreTienda, nombreUser, nombreint, numeroContacto, numeroint,
          tiendaCancelar, binding_totalPagar, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
