// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.github.mikephil.charting.charts.PieChart;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomshetetDetallesServiciosBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BottomSheetDragHandleView cerrar;

  @NonNull
  public final ItemRecuadrosBinding clics;

  @NonNull
  public final ItemRecuadrosBinding clicsNoticias;

  @NonNull
  public final ItemRecuadrosBinding compartidas;

  @NonNull
  public final ItemRecuadrosBinding compartidasNoticias;

  @NonNull
  public final ItemRecuadrosBinding guardadosNoticias;

  @NonNull
  public final IncludeDetallesServiciosBinding includeDetalles;

  @NonNull
  public final IncludeEstadisticasGeneralNoticiasBanerBinding includeEstadistica;

  @NonNull
  public final ItemRecuadrosBinding likeNoticias;

  @NonNull
  public final LinearLayout linealAnuncios;

  @NonNull
  public final LinearLayout linealNoticias;

  @NonNull
  public final LinearLayout linelaEstadisticasGeneral;

  @NonNull
  public final TextView noEcnotradoEstadisitcasNoticias;

  @NonNull
  public final TextView noEncontradoClikcCompartidas;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialButton renovar;

  @NonNull
  public final NestedScrollView scroll;

  @NonNull
  public final TextView titulo;

  @NonNull
  public final ItemRecuadrosBinding vistas;

  @NonNull
  public final PieChart vistasCompartilasCliks;

  @NonNull
  public final PieChart vistasCompartilasCliksNoticias;

  @NonNull
  public final ItemRecuadrosBinding vistasNoticias;

  private BottomshetetDetallesServiciosBinding(@NonNull RelativeLayout rootView,
      @NonNull BottomSheetDragHandleView cerrar, @NonNull ItemRecuadrosBinding clics,
      @NonNull ItemRecuadrosBinding clicsNoticias, @NonNull ItemRecuadrosBinding compartidas,
      @NonNull ItemRecuadrosBinding compartidasNoticias,
      @NonNull ItemRecuadrosBinding guardadosNoticias,
      @NonNull IncludeDetallesServiciosBinding includeDetalles,
      @NonNull IncludeEstadisticasGeneralNoticiasBanerBinding includeEstadistica,
      @NonNull ItemRecuadrosBinding likeNoticias, @NonNull LinearLayout linealAnuncios,
      @NonNull LinearLayout linealNoticias, @NonNull LinearLayout linelaEstadisticasGeneral,
      @NonNull TextView noEcnotradoEstadisitcasNoticias,
      @NonNull TextView noEncontradoClikcCompartidas, @NonNull ProgressBar progressBar,
      @NonNull MaterialButton renovar, @NonNull NestedScrollView scroll, @NonNull TextView titulo,
      @NonNull ItemRecuadrosBinding vistas, @NonNull PieChart vistasCompartilasCliks,
      @NonNull PieChart vistasCompartilasCliksNoticias,
      @NonNull ItemRecuadrosBinding vistasNoticias) {
    this.rootView = rootView;
    this.cerrar = cerrar;
    this.clics = clics;
    this.clicsNoticias = clicsNoticias;
    this.compartidas = compartidas;
    this.compartidasNoticias = compartidasNoticias;
    this.guardadosNoticias = guardadosNoticias;
    this.includeDetalles = includeDetalles;
    this.includeEstadistica = includeEstadistica;
    this.likeNoticias = likeNoticias;
    this.linealAnuncios = linealAnuncios;
    this.linealNoticias = linealNoticias;
    this.linelaEstadisticasGeneral = linelaEstadisticasGeneral;
    this.noEcnotradoEstadisitcasNoticias = noEcnotradoEstadisitcasNoticias;
    this.noEncontradoClikcCompartidas = noEncontradoClikcCompartidas;
    this.progressBar = progressBar;
    this.renovar = renovar;
    this.scroll = scroll;
    this.titulo = titulo;
    this.vistas = vistas;
    this.vistasCompartilasCliks = vistasCompartilasCliks;
    this.vistasCompartilasCliksNoticias = vistasCompartilasCliksNoticias;
    this.vistasNoticias = vistasNoticias;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomshetetDetallesServiciosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomshetetDetallesServiciosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottomshetet_detalles_servicios, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomshetetDetallesServiciosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cerrar;
      BottomSheetDragHandleView cerrar = ViewBindings.findChildViewById(rootView, id);
      if (cerrar == null) {
        break missingId;
      }

      id = R.id.clics;
      View clics = ViewBindings.findChildViewById(rootView, id);
      if (clics == null) {
        break missingId;
      }
      ItemRecuadrosBinding binding_clics = ItemRecuadrosBinding.bind(clics);

      id = R.id.clicsNoticias;
      View clicsNoticias = ViewBindings.findChildViewById(rootView, id);
      if (clicsNoticias == null) {
        break missingId;
      }
      ItemRecuadrosBinding binding_clicsNoticias = ItemRecuadrosBinding.bind(clicsNoticias);

      id = R.id.compartidas;
      View compartidas = ViewBindings.findChildViewById(rootView, id);
      if (compartidas == null) {
        break missingId;
      }
      ItemRecuadrosBinding binding_compartidas = ItemRecuadrosBinding.bind(compartidas);

      id = R.id.compartidasNoticias;
      View compartidasNoticias = ViewBindings.findChildViewById(rootView, id);
      if (compartidasNoticias == null) {
        break missingId;
      }
      ItemRecuadrosBinding binding_compartidasNoticias = ItemRecuadrosBinding.bind(compartidasNoticias);

      id = R.id.guardadosNoticias;
      View guardadosNoticias = ViewBindings.findChildViewById(rootView, id);
      if (guardadosNoticias == null) {
        break missingId;
      }
      ItemRecuadrosBinding binding_guardadosNoticias = ItemRecuadrosBinding.bind(guardadosNoticias);

      id = R.id.includeDetalles;
      View includeDetalles = ViewBindings.findChildViewById(rootView, id);
      if (includeDetalles == null) {
        break missingId;
      }
      IncludeDetallesServiciosBinding binding_includeDetalles = IncludeDetallesServiciosBinding.bind(includeDetalles);

      id = R.id.includeEstadistica;
      View includeEstadistica = ViewBindings.findChildViewById(rootView, id);
      if (includeEstadistica == null) {
        break missingId;
      }
      IncludeEstadisticasGeneralNoticiasBanerBinding binding_includeEstadistica = IncludeEstadisticasGeneralNoticiasBanerBinding.bind(includeEstadistica);

      id = R.id.likeNoticias;
      View likeNoticias = ViewBindings.findChildViewById(rootView, id);
      if (likeNoticias == null) {
        break missingId;
      }
      ItemRecuadrosBinding binding_likeNoticias = ItemRecuadrosBinding.bind(likeNoticias);

      id = R.id.linealAnuncios;
      LinearLayout linealAnuncios = ViewBindings.findChildViewById(rootView, id);
      if (linealAnuncios == null) {
        break missingId;
      }

      id = R.id.linealNoticias;
      LinearLayout linealNoticias = ViewBindings.findChildViewById(rootView, id);
      if (linealNoticias == null) {
        break missingId;
      }

      id = R.id.linelaEstadisticasGeneral;
      LinearLayout linelaEstadisticasGeneral = ViewBindings.findChildViewById(rootView, id);
      if (linelaEstadisticasGeneral == null) {
        break missingId;
      }

      id = R.id.noEcnotradoEstadisitcasNoticias;
      TextView noEcnotradoEstadisitcasNoticias = ViewBindings.findChildViewById(rootView, id);
      if (noEcnotradoEstadisitcasNoticias == null) {
        break missingId;
      }

      id = R.id.noEncontradoClikcCompartidas;
      TextView noEncontradoClikcCompartidas = ViewBindings.findChildViewById(rootView, id);
      if (noEncontradoClikcCompartidas == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.renovar;
      MaterialButton renovar = ViewBindings.findChildViewById(rootView, id);
      if (renovar == null) {
        break missingId;
      }

      id = R.id.scroll;
      NestedScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.titulo;
      TextView titulo = ViewBindings.findChildViewById(rootView, id);
      if (titulo == null) {
        break missingId;
      }

      id = R.id.vistas;
      View vistas = ViewBindings.findChildViewById(rootView, id);
      if (vistas == null) {
        break missingId;
      }
      ItemRecuadrosBinding binding_vistas = ItemRecuadrosBinding.bind(vistas);

      id = R.id.vistas_compartilas_cliks;
      PieChart vistasCompartilasCliks = ViewBindings.findChildViewById(rootView, id);
      if (vistasCompartilasCliks == null) {
        break missingId;
      }

      id = R.id.vistas_compartilas_cliksNoticias;
      PieChart vistasCompartilasCliksNoticias = ViewBindings.findChildViewById(rootView, id);
      if (vistasCompartilasCliksNoticias == null) {
        break missingId;
      }

      id = R.id.vistasNoticias;
      View vistasNoticias = ViewBindings.findChildViewById(rootView, id);
      if (vistasNoticias == null) {
        break missingId;
      }
      ItemRecuadrosBinding binding_vistasNoticias = ItemRecuadrosBinding.bind(vistasNoticias);

      return new BottomshetetDetallesServiciosBinding((RelativeLayout) rootView, cerrar,
          binding_clics, binding_clicsNoticias, binding_compartidas, binding_compartidasNoticias,
          binding_guardadosNoticias, binding_includeDetalles, binding_includeEstadistica,
          binding_likeNoticias, linealAnuncios, linealNoticias, linelaEstadisticasGeneral,
          noEcnotradoEstadisitcasNoticias, noEncontradoClikcCompartidas, progressBar, renovar,
          scroll, titulo, binding_vistas, vistasCompartilasCliks, vistasCompartilasCliksNoticias,
          binding_vistasNoticias);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
