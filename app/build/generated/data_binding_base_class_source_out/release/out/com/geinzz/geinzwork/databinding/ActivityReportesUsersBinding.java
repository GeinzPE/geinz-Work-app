// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.geinzz.geinzwork.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReportesUsersBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView TotalDeReportes;

  @NonNull
  public final LinearLayout linealSinReportes;

  @NonNull
  public final LinearLayout linealappLayout;

  @NonNull
  public final LottieAnimationView lottieAnimationView;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final RecyclerView reportes;

  private ActivityReportesUsersBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView TotalDeReportes, @NonNull LinearLayout linealSinReportes,
      @NonNull LinearLayout linealappLayout, @NonNull LottieAnimationView lottieAnimationView,
      @NonNull RelativeLayout main, @NonNull RecyclerView reportes) {
    this.rootView = rootView;
    this.TotalDeReportes = TotalDeReportes;
    this.linealSinReportes = linealSinReportes;
    this.linealappLayout = linealappLayout;
    this.lottieAnimationView = lottieAnimationView;
    this.main = main;
    this.reportes = reportes;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReportesUsersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReportesUsersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reportes_users, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReportesUsersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Total_de_reportes;
      TextView TotalDeReportes = ViewBindings.findChildViewById(rootView, id);
      if (TotalDeReportes == null) {
        break missingId;
      }

      id = R.id.linealSinReportes;
      LinearLayout linealSinReportes = ViewBindings.findChildViewById(rootView, id);
      if (linealSinReportes == null) {
        break missingId;
      }

      id = R.id.linealappLayout;
      LinearLayout linealappLayout = ViewBindings.findChildViewById(rootView, id);
      if (linealappLayout == null) {
        break missingId;
      }

      id = R.id.lottieAnimationView;
      LottieAnimationView lottieAnimationView = ViewBindings.findChildViewById(rootView, id);
      if (lottieAnimationView == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.reportes;
      RecyclerView reportes = ViewBindings.findChildViewById(rootView, id);
      if (reportes == null) {
        break missingId;
      }

      return new ActivityReportesUsersBinding((RelativeLayout) rootView, TotalDeReportes,
          linealSinReportes, linealappLayout, lottieAnimationView, main, reportes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
