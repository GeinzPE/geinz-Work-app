// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetFiltrarResultadosPromoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView anuncioCategoria;

  @NonNull
  public final MaterialButton btnApply;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final BottomSheetDragHandleView cerrar;

  @NonNull
  public final LinearLayout idProblema;

  @NonNull
  public final AutoCompleteTextView subcategoriED;

  @NonNull
  public final TextView tvTitle;

  private BottomSheetFiltrarResultadosPromoBinding(@NonNull LinearLayout rootView,
      @NonNull TextView anuncioCategoria, @NonNull MaterialButton btnApply,
      @NonNull MaterialButton btnCancel, @NonNull BottomSheetDragHandleView cerrar,
      @NonNull LinearLayout idProblema, @NonNull AutoCompleteTextView subcategoriED,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.anuncioCategoria = anuncioCategoria;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.cerrar = cerrar;
    this.idProblema = idProblema;
    this.subcategoriED = subcategoriED;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetFiltrarResultadosPromoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetFiltrarResultadosPromoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_filtrar_resultados_promo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetFiltrarResultadosPromoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.anuncioCategoria;
      TextView anuncioCategoria = ViewBindings.findChildViewById(rootView, id);
      if (anuncioCategoria == null) {
        break missingId;
      }

      id = R.id.btnApply;
      MaterialButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.cerrar;
      BottomSheetDragHandleView cerrar = ViewBindings.findChildViewById(rootView, id);
      if (cerrar == null) {
        break missingId;
      }

      id = R.id.idProblema;
      LinearLayout idProblema = ViewBindings.findChildViewById(rootView, id);
      if (idProblema == null) {
        break missingId;
      }

      id = R.id.subcategoriED;
      AutoCompleteTextView subcategoriED = ViewBindings.findChildViewById(rootView, id);
      if (subcategoriED == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new BottomSheetFiltrarResultadosPromoBinding((LinearLayout) rootView, anuncioCategoria,
          btnApply, btnCancel, cerrar, idProblema, subcategoriED, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
