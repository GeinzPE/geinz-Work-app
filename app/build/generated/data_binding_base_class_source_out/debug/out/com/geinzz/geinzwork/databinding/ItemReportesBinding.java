// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReportesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView Fecha;

  @NonNull
  public final TextView TipoReporte;

  @NonNull
  public final TextView apelado;

  @NonNull
  public final MaterialButton apelar;

  @NonNull
  public final TextView descripcion;

  @NonNull
  public final TextView hora;

  @NonNull
  public final LinearLayout lineal;

  @NonNull
  public final TextView reporteID;

  private ItemReportesBinding(@NonNull LinearLayout rootView, @NonNull TextView Fecha,
      @NonNull TextView TipoReporte, @NonNull TextView apelado, @NonNull MaterialButton apelar,
      @NonNull TextView descripcion, @NonNull TextView hora, @NonNull LinearLayout lineal,
      @NonNull TextView reporteID) {
    this.rootView = rootView;
    this.Fecha = Fecha;
    this.TipoReporte = TipoReporte;
    this.apelado = apelado;
    this.apelar = apelar;
    this.descripcion = descripcion;
    this.hora = hora;
    this.lineal = lineal;
    this.reporteID = reporteID;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReportesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReportesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_reportes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReportesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Fecha;
      TextView Fecha = ViewBindings.findChildViewById(rootView, id);
      if (Fecha == null) {
        break missingId;
      }

      id = R.id.Tipo_reporte;
      TextView TipoReporte = ViewBindings.findChildViewById(rootView, id);
      if (TipoReporte == null) {
        break missingId;
      }

      id = R.id.apelado;
      TextView apelado = ViewBindings.findChildViewById(rootView, id);
      if (apelado == null) {
        break missingId;
      }

      id = R.id.apelar;
      MaterialButton apelar = ViewBindings.findChildViewById(rootView, id);
      if (apelar == null) {
        break missingId;
      }

      id = R.id.descripcion;
      TextView descripcion = ViewBindings.findChildViewById(rootView, id);
      if (descripcion == null) {
        break missingId;
      }

      id = R.id.hora;
      TextView hora = ViewBindings.findChildViewById(rootView, id);
      if (hora == null) {
        break missingId;
      }

      id = R.id.lineal;
      LinearLayout lineal = ViewBindings.findChildViewById(rootView, id);
      if (lineal == null) {
        break missingId;
      }

      id = R.id.reporteID;
      TextView reporteID = ViewBindings.findChildViewById(rootView, id);
      if (reporteID == null) {
        break missingId;
      }

      return new ItemReportesBinding((LinearLayout) rootView, Fecha, TipoReporte, apelado, apelar,
          descripcion, hora, lineal, reporteID);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
