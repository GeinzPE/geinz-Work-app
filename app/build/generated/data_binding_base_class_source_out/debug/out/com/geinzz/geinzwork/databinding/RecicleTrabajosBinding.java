// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.imageview.ShapeableImageView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecicleTrabajosBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView CalificaionStart;

  @NonNull
  public final TextView UserName;

  @NonNull
  public final TextView activo;

  @NonNull
  public final View acvidad;

  @NonNull
  public final LinearLayout btnVermas;

  @NonNull
  public final TextView categoria;

  @NonNull
  public final FrameLayout circle;

  @NonNull
  public final CircleImageView imgPerfilUser;

  @NonNull
  public final ShapeableImageView imgTrabajo;

  @NonNull
  public final TextView localidad;

  @NonNull
  public final CircleImageView nacionalidad;

  @NonNull
  public final TextView tipoTrabajo;

  @NonNull
  public final RelativeLayout tuCuenta;

  @NonNull
  public final ImageView verificados;

  private RecicleTrabajosBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView CalificaionStart, @NonNull TextView UserName, @NonNull TextView activo,
      @NonNull View acvidad, @NonNull LinearLayout btnVermas, @NonNull TextView categoria,
      @NonNull FrameLayout circle, @NonNull CircleImageView imgPerfilUser,
      @NonNull ShapeableImageView imgTrabajo, @NonNull TextView localidad,
      @NonNull CircleImageView nacionalidad, @NonNull TextView tipoTrabajo,
      @NonNull RelativeLayout tuCuenta, @NonNull ImageView verificados) {
    this.rootView = rootView;
    this.CalificaionStart = CalificaionStart;
    this.UserName = UserName;
    this.activo = activo;
    this.acvidad = acvidad;
    this.btnVermas = btnVermas;
    this.categoria = categoria;
    this.circle = circle;
    this.imgPerfilUser = imgPerfilUser;
    this.imgTrabajo = imgTrabajo;
    this.localidad = localidad;
    this.nacionalidad = nacionalidad;
    this.tipoTrabajo = tipoTrabajo;
    this.tuCuenta = tuCuenta;
    this.verificados = verificados;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecicleTrabajosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecicleTrabajosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recicle_trabajos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecicleTrabajosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CalificaionStart;
      TextView CalificaionStart = ViewBindings.findChildViewById(rootView, id);
      if (CalificaionStart == null) {
        break missingId;
      }

      id = R.id.UserName;
      TextView UserName = ViewBindings.findChildViewById(rootView, id);
      if (UserName == null) {
        break missingId;
      }

      id = R.id.activo;
      TextView activo = ViewBindings.findChildViewById(rootView, id);
      if (activo == null) {
        break missingId;
      }

      id = R.id.acvidad;
      View acvidad = ViewBindings.findChildViewById(rootView, id);
      if (acvidad == null) {
        break missingId;
      }

      id = R.id.btn_vermas;
      LinearLayout btnVermas = ViewBindings.findChildViewById(rootView, id);
      if (btnVermas == null) {
        break missingId;
      }

      id = R.id.categoria;
      TextView categoria = ViewBindings.findChildViewById(rootView, id);
      if (categoria == null) {
        break missingId;
      }

      id = R.id.circle;
      FrameLayout circle = ViewBindings.findChildViewById(rootView, id);
      if (circle == null) {
        break missingId;
      }

      id = R.id.img_PerfilUser;
      CircleImageView imgPerfilUser = ViewBindings.findChildViewById(rootView, id);
      if (imgPerfilUser == null) {
        break missingId;
      }

      id = R.id.img_trabajo;
      ShapeableImageView imgTrabajo = ViewBindings.findChildViewById(rootView, id);
      if (imgTrabajo == null) {
        break missingId;
      }

      id = R.id.localidad;
      TextView localidad = ViewBindings.findChildViewById(rootView, id);
      if (localidad == null) {
        break missingId;
      }

      id = R.id.nacionalidad;
      CircleImageView nacionalidad = ViewBindings.findChildViewById(rootView, id);
      if (nacionalidad == null) {
        break missingId;
      }

      id = R.id.tipoTrabajo;
      TextView tipoTrabajo = ViewBindings.findChildViewById(rootView, id);
      if (tipoTrabajo == null) {
        break missingId;
      }

      id = R.id.tuCuenta;
      RelativeLayout tuCuenta = ViewBindings.findChildViewById(rootView, id);
      if (tuCuenta == null) {
        break missingId;
      }

      id = R.id.verificados;
      ImageView verificados = ViewBindings.findChildViewById(rootView, id);
      if (verificados == null) {
        break missingId;
      }

      return new RecicleTrabajosBinding((RelativeLayout) rootView, CalificaionStart, UserName,
          activo, acvidad, btnVermas, categoria, circle, imgPerfilUser, imgTrabajo, localidad,
          nacionalidad, tipoTrabajo, tuCuenta, verificados);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
