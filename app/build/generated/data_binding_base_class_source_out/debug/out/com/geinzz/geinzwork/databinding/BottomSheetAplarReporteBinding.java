// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetAplarReporteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText apellidosED;

  @NonNull
  public final MaterialButton btnApply;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final BottomSheetDragHandleView cerrar;

  @NonNull
  public final TextInputLayout delatalles;

  @NonNull
  public final EditText dellatesED;

  @NonNull
  public final TextInputLayout dni;

  @NonNull
  public final TextView fecha;

  @NonNull
  public final TextView hora;

  @NonNull
  public final TextView idApelacioProblema;

  @NonNull
  public final LinearLayout idProblema;

  @NonNull
  public final TextInputLayout motivo;

  @NonNull
  public final EditText motivoED;

  @NonNull
  public final TextInputLayout nombre;

  @NonNull
  public final EditText nombreED;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final TextInputLayout telefono;

  @NonNull
  public final EditText telefonoed;

  @NonNull
  public final TextView tvTitle;

  private BottomSheetAplarReporteBinding(@NonNull LinearLayout rootView,
      @NonNull EditText apellidosED, @NonNull MaterialButton btnApply,
      @NonNull MaterialButton btnCancel, @NonNull BottomSheetDragHandleView cerrar,
      @NonNull TextInputLayout delatalles, @NonNull EditText dellatesED,
      @NonNull TextInputLayout dni, @NonNull TextView fecha, @NonNull TextView hora,
      @NonNull TextView idApelacioProblema, @NonNull LinearLayout idProblema,
      @NonNull TextInputLayout motivo, @NonNull EditText motivoED, @NonNull TextInputLayout nombre,
      @NonNull EditText nombreED, @NonNull NestedScrollView scrollView,
      @NonNull TextInputLayout telefono, @NonNull EditText telefonoed, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.apellidosED = apellidosED;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.cerrar = cerrar;
    this.delatalles = delatalles;
    this.dellatesED = dellatesED;
    this.dni = dni;
    this.fecha = fecha;
    this.hora = hora;
    this.idApelacioProblema = idApelacioProblema;
    this.idProblema = idProblema;
    this.motivo = motivo;
    this.motivoED = motivoED;
    this.nombre = nombre;
    this.nombreED = nombreED;
    this.scrollView = scrollView;
    this.telefono = telefono;
    this.telefonoed = telefonoed;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetAplarReporteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetAplarReporteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_aplar_reporte, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetAplarReporteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apellidosED;
      EditText apellidosED = ViewBindings.findChildViewById(rootView, id);
      if (apellidosED == null) {
        break missingId;
      }

      id = R.id.btnApply;
      MaterialButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.cerrar;
      BottomSheetDragHandleView cerrar = ViewBindings.findChildViewById(rootView, id);
      if (cerrar == null) {
        break missingId;
      }

      id = R.id.delatalles;
      TextInputLayout delatalles = ViewBindings.findChildViewById(rootView, id);
      if (delatalles == null) {
        break missingId;
      }

      id = R.id.dellatesED;
      EditText dellatesED = ViewBindings.findChildViewById(rootView, id);
      if (dellatesED == null) {
        break missingId;
      }

      id = R.id.dni;
      TextInputLayout dni = ViewBindings.findChildViewById(rootView, id);
      if (dni == null) {
        break missingId;
      }

      id = R.id.fecha;
      TextView fecha = ViewBindings.findChildViewById(rootView, id);
      if (fecha == null) {
        break missingId;
      }

      id = R.id.hora;
      TextView hora = ViewBindings.findChildViewById(rootView, id);
      if (hora == null) {
        break missingId;
      }

      id = R.id.idApelacio_problema;
      TextView idApelacioProblema = ViewBindings.findChildViewById(rootView, id);
      if (idApelacioProblema == null) {
        break missingId;
      }

      id = R.id.idProblema;
      LinearLayout idProblema = ViewBindings.findChildViewById(rootView, id);
      if (idProblema == null) {
        break missingId;
      }

      id = R.id.motivo;
      TextInputLayout motivo = ViewBindings.findChildViewById(rootView, id);
      if (motivo == null) {
        break missingId;
      }

      id = R.id.motivoED;
      EditText motivoED = ViewBindings.findChildViewById(rootView, id);
      if (motivoED == null) {
        break missingId;
      }

      id = R.id.nombre;
      TextInputLayout nombre = ViewBindings.findChildViewById(rootView, id);
      if (nombre == null) {
        break missingId;
      }

      id = R.id.nombreED;
      EditText nombreED = ViewBindings.findChildViewById(rootView, id);
      if (nombreED == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.telefono;
      TextInputLayout telefono = ViewBindings.findChildViewById(rootView, id);
      if (telefono == null) {
        break missingId;
      }

      id = R.id.telefonoed;
      EditText telefonoed = ViewBindings.findChildViewById(rootView, id);
      if (telefonoed == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new BottomSheetAplarReporteBinding((LinearLayout) rootView, apellidosED, btnApply,
          btnCancel, cerrar, delatalles, dellatesED, dni, fecha, hora, idApelacioProblema,
          idProblema, motivo, motivoED, nombre, nombreED, scrollView, telefono, telefonoed,
          tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
