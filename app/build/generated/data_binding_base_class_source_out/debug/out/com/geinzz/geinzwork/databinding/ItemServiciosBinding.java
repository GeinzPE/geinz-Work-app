// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.geinzz.geinzwork.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemServiciosBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LottieAnimationView corazon;

  @NonNull
  public final ShapeableImageView imgTrabajo;

  @NonNull
  public final LinearLayout linealPrecio;

  @NonNull
  public final LinearLayout listener;

  @NonNull
  public final TextView nombreServicio;

  @NonNull
  public final TextView precio;

  private ItemServiciosBinding(@NonNull RelativeLayout rootView,
      @NonNull LottieAnimationView corazon, @NonNull ShapeableImageView imgTrabajo,
      @NonNull LinearLayout linealPrecio, @NonNull LinearLayout listener,
      @NonNull TextView nombreServicio, @NonNull TextView precio) {
    this.rootView = rootView;
    this.corazon = corazon;
    this.imgTrabajo = imgTrabajo;
    this.linealPrecio = linealPrecio;
    this.listener = listener;
    this.nombreServicio = nombreServicio;
    this.precio = precio;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemServiciosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemServiciosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_servicios, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemServiciosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.corazon;
      LottieAnimationView corazon = ViewBindings.findChildViewById(rootView, id);
      if (corazon == null) {
        break missingId;
      }

      id = R.id.img_trabajo;
      ShapeableImageView imgTrabajo = ViewBindings.findChildViewById(rootView, id);
      if (imgTrabajo == null) {
        break missingId;
      }

      id = R.id.linealPrecio;
      LinearLayout linealPrecio = ViewBindings.findChildViewById(rootView, id);
      if (linealPrecio == null) {
        break missingId;
      }

      id = R.id.listener;
      LinearLayout listener = ViewBindings.findChildViewById(rootView, id);
      if (listener == null) {
        break missingId;
      }

      id = R.id.nombreServicio;
      TextView nombreServicio = ViewBindings.findChildViewById(rootView, id);
      if (nombreServicio == null) {
        break missingId;
      }

      id = R.id.precio;
      TextView precio = ViewBindings.findChildViewById(rootView, id);
      if (precio == null) {
        break missingId;
      }

      return new ItemServiciosBinding((RelativeLayout) rootView, corazon, imgTrabajo, linealPrecio,
          listener, nombreServicio, precio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
