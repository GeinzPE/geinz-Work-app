// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IncludeTotalPagarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView drivetxt;

  @NonNull
  public final LinearLayout linealDriver;

  @NonNull
  public final LinearLayout linealTotalPagar;

  @NonNull
  public final TextView pagoProductos;

  @NonNull
  public final TextView totalPagar;

  private IncludeTotalPagarBinding(@NonNull LinearLayout rootView, @NonNull TextView drivetxt,
      @NonNull LinearLayout linealDriver, @NonNull LinearLayout linealTotalPagar,
      @NonNull TextView pagoProductos, @NonNull TextView totalPagar) {
    this.rootView = rootView;
    this.drivetxt = drivetxt;
    this.linealDriver = linealDriver;
    this.linealTotalPagar = linealTotalPagar;
    this.pagoProductos = pagoProductos;
    this.totalPagar = totalPagar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IncludeTotalPagarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IncludeTotalPagarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.include_total_pagar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IncludeTotalPagarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drivetxt;
      TextView drivetxt = ViewBindings.findChildViewById(rootView, id);
      if (drivetxt == null) {
        break missingId;
      }

      id = R.id.lineal_driver;
      LinearLayout linealDriver = ViewBindings.findChildViewById(rootView, id);
      if (linealDriver == null) {
        break missingId;
      }

      id = R.id.linealTotalPagar;
      LinearLayout linealTotalPagar = ViewBindings.findChildViewById(rootView, id);
      if (linealTotalPagar == null) {
        break missingId;
      }

      id = R.id.pagoProductos;
      TextView pagoProductos = ViewBindings.findChildViewById(rootView, id);
      if (pagoProductos == null) {
        break missingId;
      }

      id = R.id.totalPagar;
      TextView totalPagar = ViewBindings.findChildViewById(rootView, id);
      if (totalPagar == null) {
        break missingId;
      }

      return new IncludeTotalPagarBinding((LinearLayout) rootView, drivetxt, linealDriver,
          linealTotalPagar, pagoProductos, totalPagar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
