// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetReservaProductosBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView FechaActual;

  @NonNull
  public final TextView TipoTienda;

  @NonNull
  public final Button btnApply;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final IncludeCamposPrincipalesBinding camposPrincipales;

  @NonNull
  public final BottomSheetDragHandleView cerrar;

  @NonNull
  public final IncludeDireccionEnviosBinding direccionEnvios;

  @NonNull
  public final TextView horaActual;

  @NonNull
  public final TextView horarioAtencion;

  @NonNull
  public final IncludeItemPreviewProductoBinding itemPreviewProductos;

  @NonNull
  public final TextView localidadTienda;

  @NonNull
  public final IncludeMetodosEntregaBinding metodoEntrega;

  @NonNull
  public final IncludeMetodosPagoBinding metodoPagos;

  @NonNull
  public final NestedScrollView scrollview;

  @NonNull
  public final IncludeTotalPagarBinding totalPagar;

  @NonNull
  public final TextView tvTitle;

  private BottomSheetReservaProductosBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView FechaActual, @NonNull TextView TipoTienda, @NonNull Button btnApply,
      @NonNull Button btnCancel, @NonNull IncludeCamposPrincipalesBinding camposPrincipales,
      @NonNull BottomSheetDragHandleView cerrar,
      @NonNull IncludeDireccionEnviosBinding direccionEnvios, @NonNull TextView horaActual,
      @NonNull TextView horarioAtencion,
      @NonNull IncludeItemPreviewProductoBinding itemPreviewProductos,
      @NonNull TextView localidadTienda, @NonNull IncludeMetodosEntregaBinding metodoEntrega,
      @NonNull IncludeMetodosPagoBinding metodoPagos, @NonNull NestedScrollView scrollview,
      @NonNull IncludeTotalPagarBinding totalPagar, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.FechaActual = FechaActual;
    this.TipoTienda = TipoTienda;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.camposPrincipales = camposPrincipales;
    this.cerrar = cerrar;
    this.direccionEnvios = direccionEnvios;
    this.horaActual = horaActual;
    this.horarioAtencion = horarioAtencion;
    this.itemPreviewProductos = itemPreviewProductos;
    this.localidadTienda = localidadTienda;
    this.metodoEntrega = metodoEntrega;
    this.metodoPagos = metodoPagos;
    this.scrollview = scrollview;
    this.totalPagar = totalPagar;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetReservaProductosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetReservaProductosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_reserva_productos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetReservaProductosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FechaActual;
      TextView FechaActual = ViewBindings.findChildViewById(rootView, id);
      if (FechaActual == null) {
        break missingId;
      }

      id = R.id.TipoTienda;
      TextView TipoTienda = ViewBindings.findChildViewById(rootView, id);
      if (TipoTienda == null) {
        break missingId;
      }

      id = R.id.btnApply;
      Button btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.campos_principales;
      View camposPrincipales = ViewBindings.findChildViewById(rootView, id);
      if (camposPrincipales == null) {
        break missingId;
      }
      IncludeCamposPrincipalesBinding binding_camposPrincipales = IncludeCamposPrincipalesBinding.bind(camposPrincipales);

      id = R.id.cerrar;
      BottomSheetDragHandleView cerrar = ViewBindings.findChildViewById(rootView, id);
      if (cerrar == null) {
        break missingId;
      }

      id = R.id.direccionEnvios;
      View direccionEnvios = ViewBindings.findChildViewById(rootView, id);
      if (direccionEnvios == null) {
        break missingId;
      }
      IncludeDireccionEnviosBinding binding_direccionEnvios = IncludeDireccionEnviosBinding.bind(direccionEnvios);

      id = R.id.horaActual;
      TextView horaActual = ViewBindings.findChildViewById(rootView, id);
      if (horaActual == null) {
        break missingId;
      }

      id = R.id.horarioAtencion;
      TextView horarioAtencion = ViewBindings.findChildViewById(rootView, id);
      if (horarioAtencion == null) {
        break missingId;
      }

      id = R.id.item_preview_productos;
      View itemPreviewProductos = ViewBindings.findChildViewById(rootView, id);
      if (itemPreviewProductos == null) {
        break missingId;
      }
      IncludeItemPreviewProductoBinding binding_itemPreviewProductos = IncludeItemPreviewProductoBinding.bind(itemPreviewProductos);

      id = R.id.localidadTienda;
      TextView localidadTienda = ViewBindings.findChildViewById(rootView, id);
      if (localidadTienda == null) {
        break missingId;
      }

      id = R.id.metodo_entrega;
      View metodoEntrega = ViewBindings.findChildViewById(rootView, id);
      if (metodoEntrega == null) {
        break missingId;
      }
      IncludeMetodosEntregaBinding binding_metodoEntrega = IncludeMetodosEntregaBinding.bind(metodoEntrega);

      id = R.id.metodo_pagos;
      View metodoPagos = ViewBindings.findChildViewById(rootView, id);
      if (metodoPagos == null) {
        break missingId;
      }
      IncludeMetodosPagoBinding binding_metodoPagos = IncludeMetodosPagoBinding.bind(metodoPagos);

      NestedScrollView scrollview = (NestedScrollView) rootView;

      id = R.id.totalPagar;
      View totalPagar = ViewBindings.findChildViewById(rootView, id);
      if (totalPagar == null) {
        break missingId;
      }
      IncludeTotalPagarBinding binding_totalPagar = IncludeTotalPagarBinding.bind(totalPagar);

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new BottomSheetReservaProductosBinding((NestedScrollView) rootView, FechaActual,
          TipoTienda, btnApply, btnCancel, binding_camposPrincipales, cerrar,
          binding_direccionEnvios, horaActual, horarioAtencion, binding_itemPreviewProductos,
          localidadTienda, binding_metodoEntrega, binding_metodoPagos, scrollview,
          binding_totalPagar, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
