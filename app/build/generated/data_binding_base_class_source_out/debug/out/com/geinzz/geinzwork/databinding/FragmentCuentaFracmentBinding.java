// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCuentaFracmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView CorreoUsuario;

  @NonNull
  public final RelativeLayout RelativeGeneral;

  @NonNull
  public final TextView apellidoUSer;

  @NonNull
  public final ImageView btnHorairo;

  @NonNull
  public final TextView cat;

  @NonNull
  public final ScrollView containerDatos;

  @NonNull
  public final LinearLayout contenedorDatos;

  @NonNull
  public final TextView descripcion;

  @NonNull
  public final TextView edadUser;

  @NonNull
  public final ImageView editarDescripcion;

  @NonNull
  public final ImageView editarNumero;

  @NonNull
  public final ImageView editarapellido;

  @NonNull
  public final ImageView editarnombre;

  @NonNull
  public final View estado;

  @NonNull
  public final TextView fechaNaciminetoUSer;

  @NonNull
  public final ImageView fotoPortada;

  @NonNull
  public final TextView genero;

  @NonNull
  public final FrameLayout horarioReloj;

  @NonNull
  public final TextView horarioUser;

  @NonNull
  public final ImageView iconVerificado;

  @NonNull
  public final CircleImageView imagenPerfil;

  @NonNull
  public final LinearLayout linealCategoriaT;

  @NonNull
  public final LinearLayout linealDescripcion;

  @NonNull
  public final LinearLayout linealHorario;

  @NonNull
  public final LinearLayout linealPlan;

  @NonNull
  public final LinearLayout linealTipoTrabajo;

  @NonNull
  public final LinearLayout linealVerificado;

  @NonNull
  public final LinearLayoutCompat loading;

  @NonNull
  public final TextView localidad;

  @NonNull
  public final TextView nacionnalidadUser;

  @NonNull
  public final TextView nombreUser;

  @NonNull
  public final TextView numero;

  @NonNull
  public final View overlay;

  @NonNull
  public final TextView plan;

  @NonNull
  public final ImageButton popup;

  @NonNull
  public final CircularProgressIndicator progressCargaImagen;

  @NonNull
  public final SwipeRefreshLayout swipe;

  @NonNull
  public final TextView tipoCuenta;

  @NonNull
  public final TextView tipoTrabajores;

  @NonNull
  public final TextView verificado;

  private FragmentCuentaFracmentBinding(@NonNull FrameLayout rootView,
      @NonNull TextView CorreoUsuario, @NonNull RelativeLayout RelativeGeneral,
      @NonNull TextView apellidoUSer, @NonNull ImageView btnHorairo, @NonNull TextView cat,
      @NonNull ScrollView containerDatos, @NonNull LinearLayout contenedorDatos,
      @NonNull TextView descripcion, @NonNull TextView edadUser,
      @NonNull ImageView editarDescripcion, @NonNull ImageView editarNumero,
      @NonNull ImageView editarapellido, @NonNull ImageView editarnombre, @NonNull View estado,
      @NonNull TextView fechaNaciminetoUSer, @NonNull ImageView fotoPortada,
      @NonNull TextView genero, @NonNull FrameLayout horarioReloj, @NonNull TextView horarioUser,
      @NonNull ImageView iconVerificado, @NonNull CircleImageView imagenPerfil,
      @NonNull LinearLayout linealCategoriaT, @NonNull LinearLayout linealDescripcion,
      @NonNull LinearLayout linealHorario, @NonNull LinearLayout linealPlan,
      @NonNull LinearLayout linealTipoTrabajo, @NonNull LinearLayout linealVerificado,
      @NonNull LinearLayoutCompat loading, @NonNull TextView localidad,
      @NonNull TextView nacionnalidadUser, @NonNull TextView nombreUser, @NonNull TextView numero,
      @NonNull View overlay, @NonNull TextView plan, @NonNull ImageButton popup,
      @NonNull CircularProgressIndicator progressCargaImagen, @NonNull SwipeRefreshLayout swipe,
      @NonNull TextView tipoCuenta, @NonNull TextView tipoTrabajores,
      @NonNull TextView verificado) {
    this.rootView = rootView;
    this.CorreoUsuario = CorreoUsuario;
    this.RelativeGeneral = RelativeGeneral;
    this.apellidoUSer = apellidoUSer;
    this.btnHorairo = btnHorairo;
    this.cat = cat;
    this.containerDatos = containerDatos;
    this.contenedorDatos = contenedorDatos;
    this.descripcion = descripcion;
    this.edadUser = edadUser;
    this.editarDescripcion = editarDescripcion;
    this.editarNumero = editarNumero;
    this.editarapellido = editarapellido;
    this.editarnombre = editarnombre;
    this.estado = estado;
    this.fechaNaciminetoUSer = fechaNaciminetoUSer;
    this.fotoPortada = fotoPortada;
    this.genero = genero;
    this.horarioReloj = horarioReloj;
    this.horarioUser = horarioUser;
    this.iconVerificado = iconVerificado;
    this.imagenPerfil = imagenPerfil;
    this.linealCategoriaT = linealCategoriaT;
    this.linealDescripcion = linealDescripcion;
    this.linealHorario = linealHorario;
    this.linealPlan = linealPlan;
    this.linealTipoTrabajo = linealTipoTrabajo;
    this.linealVerificado = linealVerificado;
    this.loading = loading;
    this.localidad = localidad;
    this.nacionnalidadUser = nacionnalidadUser;
    this.nombreUser = nombreUser;
    this.numero = numero;
    this.overlay = overlay;
    this.plan = plan;
    this.popup = popup;
    this.progressCargaImagen = progressCargaImagen;
    this.swipe = swipe;
    this.tipoCuenta = tipoCuenta;
    this.tipoTrabajores = tipoTrabajores;
    this.verificado = verificado;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCuentaFracmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCuentaFracmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_cuenta_fracment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCuentaFracmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CorreoUsuario;
      TextView CorreoUsuario = ViewBindings.findChildViewById(rootView, id);
      if (CorreoUsuario == null) {
        break missingId;
      }

      id = R.id.RelativeGeneral;
      RelativeLayout RelativeGeneral = ViewBindings.findChildViewById(rootView, id);
      if (RelativeGeneral == null) {
        break missingId;
      }

      id = R.id.apellidoUSer;
      TextView apellidoUSer = ViewBindings.findChildViewById(rootView, id);
      if (apellidoUSer == null) {
        break missingId;
      }

      id = R.id.btn_horairo;
      ImageView btnHorairo = ViewBindings.findChildViewById(rootView, id);
      if (btnHorairo == null) {
        break missingId;
      }

      id = R.id.cat;
      TextView cat = ViewBindings.findChildViewById(rootView, id);
      if (cat == null) {
        break missingId;
      }

      id = R.id.containerDatos;
      ScrollView containerDatos = ViewBindings.findChildViewById(rootView, id);
      if (containerDatos == null) {
        break missingId;
      }

      id = R.id.contenedor_datos;
      LinearLayout contenedorDatos = ViewBindings.findChildViewById(rootView, id);
      if (contenedorDatos == null) {
        break missingId;
      }

      id = R.id.descripcion;
      TextView descripcion = ViewBindings.findChildViewById(rootView, id);
      if (descripcion == null) {
        break missingId;
      }

      id = R.id.edadUser;
      TextView edadUser = ViewBindings.findChildViewById(rootView, id);
      if (edadUser == null) {
        break missingId;
      }

      id = R.id.editar_descripcion;
      ImageView editarDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (editarDescripcion == null) {
        break missingId;
      }

      id = R.id.editarNumero;
      ImageView editarNumero = ViewBindings.findChildViewById(rootView, id);
      if (editarNumero == null) {
        break missingId;
      }

      id = R.id.editarapellido;
      ImageView editarapellido = ViewBindings.findChildViewById(rootView, id);
      if (editarapellido == null) {
        break missingId;
      }

      id = R.id.editarnombre;
      ImageView editarnombre = ViewBindings.findChildViewById(rootView, id);
      if (editarnombre == null) {
        break missingId;
      }

      id = R.id.estado;
      View estado = ViewBindings.findChildViewById(rootView, id);
      if (estado == null) {
        break missingId;
      }

      id = R.id.fechaNaciminetoUSer;
      TextView fechaNaciminetoUSer = ViewBindings.findChildViewById(rootView, id);
      if (fechaNaciminetoUSer == null) {
        break missingId;
      }

      id = R.id.fotoPortada;
      ImageView fotoPortada = ViewBindings.findChildViewById(rootView, id);
      if (fotoPortada == null) {
        break missingId;
      }

      id = R.id.genero;
      TextView genero = ViewBindings.findChildViewById(rootView, id);
      if (genero == null) {
        break missingId;
      }

      id = R.id.horarioReloj;
      FrameLayout horarioReloj = ViewBindings.findChildViewById(rootView, id);
      if (horarioReloj == null) {
        break missingId;
      }

      id = R.id.horarioUser;
      TextView horarioUser = ViewBindings.findChildViewById(rootView, id);
      if (horarioUser == null) {
        break missingId;
      }

      id = R.id.iconVerificado;
      ImageView iconVerificado = ViewBindings.findChildViewById(rootView, id);
      if (iconVerificado == null) {
        break missingId;
      }

      id = R.id.imagenPerfil;
      CircleImageView imagenPerfil = ViewBindings.findChildViewById(rootView, id);
      if (imagenPerfil == null) {
        break missingId;
      }

      id = R.id.linealCategoriaT;
      LinearLayout linealCategoriaT = ViewBindings.findChildViewById(rootView, id);
      if (linealCategoriaT == null) {
        break missingId;
      }

      id = R.id.linealDescripcion;
      LinearLayout linealDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (linealDescripcion == null) {
        break missingId;
      }

      id = R.id.linealHorario;
      LinearLayout linealHorario = ViewBindings.findChildViewById(rootView, id);
      if (linealHorario == null) {
        break missingId;
      }

      id = R.id.lineal_plan;
      LinearLayout linealPlan = ViewBindings.findChildViewById(rootView, id);
      if (linealPlan == null) {
        break missingId;
      }

      id = R.id.linealTipoTrabajo;
      LinearLayout linealTipoTrabajo = ViewBindings.findChildViewById(rootView, id);
      if (linealTipoTrabajo == null) {
        break missingId;
      }

      id = R.id.linealVerificado;
      LinearLayout linealVerificado = ViewBindings.findChildViewById(rootView, id);
      if (linealVerificado == null) {
        break missingId;
      }

      id = R.id.loading;
      LinearLayoutCompat loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.localidad;
      TextView localidad = ViewBindings.findChildViewById(rootView, id);
      if (localidad == null) {
        break missingId;
      }

      id = R.id.nacionnalidadUser;
      TextView nacionnalidadUser = ViewBindings.findChildViewById(rootView, id);
      if (nacionnalidadUser == null) {
        break missingId;
      }

      id = R.id.nombreUser;
      TextView nombreUser = ViewBindings.findChildViewById(rootView, id);
      if (nombreUser == null) {
        break missingId;
      }

      id = R.id.numero;
      TextView numero = ViewBindings.findChildViewById(rootView, id);
      if (numero == null) {
        break missingId;
      }

      id = R.id.overlay;
      View overlay = ViewBindings.findChildViewById(rootView, id);
      if (overlay == null) {
        break missingId;
      }

      id = R.id.plan;
      TextView plan = ViewBindings.findChildViewById(rootView, id);
      if (plan == null) {
        break missingId;
      }

      id = R.id.popup;
      ImageButton popup = ViewBindings.findChildViewById(rootView, id);
      if (popup == null) {
        break missingId;
      }

      id = R.id.progress_carga_imagen;
      CircularProgressIndicator progressCargaImagen = ViewBindings.findChildViewById(rootView, id);
      if (progressCargaImagen == null) {
        break missingId;
      }

      id = R.id.swipe;
      SwipeRefreshLayout swipe = ViewBindings.findChildViewById(rootView, id);
      if (swipe == null) {
        break missingId;
      }

      id = R.id.tipoCuenta;
      TextView tipoCuenta = ViewBindings.findChildViewById(rootView, id);
      if (tipoCuenta == null) {
        break missingId;
      }

      id = R.id.tipo_trabajores;
      TextView tipoTrabajores = ViewBindings.findChildViewById(rootView, id);
      if (tipoTrabajores == null) {
        break missingId;
      }

      id = R.id.verificado;
      TextView verificado = ViewBindings.findChildViewById(rootView, id);
      if (verificado == null) {
        break missingId;
      }

      return new FragmentCuentaFracmentBinding((FrameLayout) rootView, CorreoUsuario,
          RelativeGeneral, apellidoUSer, btnHorairo, cat, containerDatos, contenedorDatos,
          descripcion, edadUser, editarDescripcion, editarNumero, editarapellido, editarnombre,
          estado, fechaNaciminetoUSer, fotoPortada, genero, horarioReloj, horarioUser,
          iconVerificado, imagenPerfil, linealCategoriaT, linealDescripcion, linealHorario,
          linealPlan, linealTipoTrabajo, linealVerificado, loading, localidad, nacionnalidadUser,
          nombreUser, numero, overlay, plan, popup, progressCargaImagen, swipe, tipoCuenta,
          tipoTrabajores, verificado);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
