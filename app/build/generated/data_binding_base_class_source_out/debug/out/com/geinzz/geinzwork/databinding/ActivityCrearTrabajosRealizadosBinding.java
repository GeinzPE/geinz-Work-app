// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCrearTrabajosRealizadosBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox Acepto;

  @NonNull
  public final TextView PublicacionesDisponibles;

  @NonNull
  public final TextView PublicacionesRealizadas;

  @NonNull
  public final TextView TotalPublicaciones;

  @NonNull
  public final TextInputLayout descripcionServicios;

  @NonNull
  public final EditText descripcionServiciosED;

  @NonNull
  public final TextView fecha;

  @NonNull
  public final TextView hora;

  @NonNull
  public final ShapeableImageView imagenTrabajo;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextView plan;

  @NonNull
  public final ImageView popup;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final FrameLayout progressBarContainer;

  @NonNull
  public final AppCompatButton publicar;

  @NonNull
  public final NestedScrollView scroll;

  @NonNull
  public final EditText tituloPublicacionED;

  @NonNull
  public final TextInputLayout tituloPublicaciontext;

  private ActivityCrearTrabajosRealizadosBinding(@NonNull RelativeLayout rootView,
      @NonNull CheckBox Acepto, @NonNull TextView PublicacionesDisponibles,
      @NonNull TextView PublicacionesRealizadas, @NonNull TextView TotalPublicaciones,
      @NonNull TextInputLayout descripcionServicios, @NonNull EditText descripcionServiciosED,
      @NonNull TextView fecha, @NonNull TextView hora, @NonNull ShapeableImageView imagenTrabajo,
      @NonNull RelativeLayout main, @NonNull TextView plan, @NonNull ImageView popup,
      @NonNull ProgressBar progressBar, @NonNull FrameLayout progressBarContainer,
      @NonNull AppCompatButton publicar, @NonNull NestedScrollView scroll,
      @NonNull EditText tituloPublicacionED, @NonNull TextInputLayout tituloPublicaciontext) {
    this.rootView = rootView;
    this.Acepto = Acepto;
    this.PublicacionesDisponibles = PublicacionesDisponibles;
    this.PublicacionesRealizadas = PublicacionesRealizadas;
    this.TotalPublicaciones = TotalPublicaciones;
    this.descripcionServicios = descripcionServicios;
    this.descripcionServiciosED = descripcionServiciosED;
    this.fecha = fecha;
    this.hora = hora;
    this.imagenTrabajo = imagenTrabajo;
    this.main = main;
    this.plan = plan;
    this.popup = popup;
    this.progressBar = progressBar;
    this.progressBarContainer = progressBarContainer;
    this.publicar = publicar;
    this.scroll = scroll;
    this.tituloPublicacionED = tituloPublicacionED;
    this.tituloPublicaciontext = tituloPublicaciontext;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCrearTrabajosRealizadosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCrearTrabajosRealizadosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_crear_trabajos_realizados, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCrearTrabajosRealizadosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Acepto;
      CheckBox Acepto = ViewBindings.findChildViewById(rootView, id);
      if (Acepto == null) {
        break missingId;
      }

      id = R.id.Publicaciones_disponibles;
      TextView PublicacionesDisponibles = ViewBindings.findChildViewById(rootView, id);
      if (PublicacionesDisponibles == null) {
        break missingId;
      }

      id = R.id.Publicaciones_realizadas;
      TextView PublicacionesRealizadas = ViewBindings.findChildViewById(rootView, id);
      if (PublicacionesRealizadas == null) {
        break missingId;
      }

      id = R.id.TotalPublicaciones;
      TextView TotalPublicaciones = ViewBindings.findChildViewById(rootView, id);
      if (TotalPublicaciones == null) {
        break missingId;
      }

      id = R.id.descripcionServicios;
      TextInputLayout descripcionServicios = ViewBindings.findChildViewById(rootView, id);
      if (descripcionServicios == null) {
        break missingId;
      }

      id = R.id.descripcionServiciosED;
      EditText descripcionServiciosED = ViewBindings.findChildViewById(rootView, id);
      if (descripcionServiciosED == null) {
        break missingId;
      }

      id = R.id.fecha;
      TextView fecha = ViewBindings.findChildViewById(rootView, id);
      if (fecha == null) {
        break missingId;
      }

      id = R.id.hora;
      TextView hora = ViewBindings.findChildViewById(rootView, id);
      if (hora == null) {
        break missingId;
      }

      id = R.id.imagen_trabajo;
      ShapeableImageView imagenTrabajo = ViewBindings.findChildViewById(rootView, id);
      if (imagenTrabajo == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.plan;
      TextView plan = ViewBindings.findChildViewById(rootView, id);
      if (plan == null) {
        break missingId;
      }

      id = R.id.popup;
      ImageView popup = ViewBindings.findChildViewById(rootView, id);
      if (popup == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressBarContainer;
      FrameLayout progressBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (progressBarContainer == null) {
        break missingId;
      }

      id = R.id.publicar;
      AppCompatButton publicar = ViewBindings.findChildViewById(rootView, id);
      if (publicar == null) {
        break missingId;
      }

      id = R.id.scroll;
      NestedScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.titulo_publicacionED;
      EditText tituloPublicacionED = ViewBindings.findChildViewById(rootView, id);
      if (tituloPublicacionED == null) {
        break missingId;
      }

      id = R.id.titulo_publicaciontext;
      TextInputLayout tituloPublicaciontext = ViewBindings.findChildViewById(rootView, id);
      if (tituloPublicaciontext == null) {
        break missingId;
      }

      return new ActivityCrearTrabajosRealizadosBinding((RelativeLayout) rootView, Acepto,
          PublicacionesDisponibles, PublicacionesRealizadas, TotalPublicaciones,
          descripcionServicios, descripcionServiciosED, fecha, hora, imagenTrabajo, main, plan,
          popup, progressBar, progressBarContainer, publicar, scroll, tituloPublicacionED,
          tituloPublicaciontext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
