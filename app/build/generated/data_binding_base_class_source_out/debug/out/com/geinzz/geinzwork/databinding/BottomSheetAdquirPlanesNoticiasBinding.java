// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetAdquirPlanesNoticiasBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView Total;

  @NonNull
  public final TextInputLayout apellido;

  @NonNull
  public final EditText apellidosED;

  @NonNull
  public final MaterialButton btnApply;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final BottomSheetDragHandleView cerrar;

  @NonNull
  public final TextView descripcion;

  @NonNull
  public final TextInputLayout dni;

  @NonNull
  public final EditText dniED;

  @NonNull
  public final TextView fecha;

  @NonNull
  public final TextView hora;

  @NonNull
  public final LinearLayout idProblema;

  @NonNull
  public final TextInputLayout nombre;

  @NonNull
  public final EditText nombreED;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final TextInputLayout telefono;

  @NonNull
  public final EditText telefonoed;

  @NonNull
  public final TextView tipoServicio;

  @NonNull
  public final TextView tvTitle;

  private BottomSheetAdquirPlanesNoticiasBinding(@NonNull LinearLayout rootView,
      @NonNull TextView Total, @NonNull TextInputLayout apellido, @NonNull EditText apellidosED,
      @NonNull MaterialButton btnApply, @NonNull MaterialButton btnCancel,
      @NonNull BottomSheetDragHandleView cerrar, @NonNull TextView descripcion,
      @NonNull TextInputLayout dni, @NonNull EditText dniED, @NonNull TextView fecha,
      @NonNull TextView hora, @NonNull LinearLayout idProblema, @NonNull TextInputLayout nombre,
      @NonNull EditText nombreED, @NonNull NestedScrollView scrollView,
      @NonNull TextInputLayout telefono, @NonNull EditText telefonoed,
      @NonNull TextView tipoServicio, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.Total = Total;
    this.apellido = apellido;
    this.apellidosED = apellidosED;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.cerrar = cerrar;
    this.descripcion = descripcion;
    this.dni = dni;
    this.dniED = dniED;
    this.fecha = fecha;
    this.hora = hora;
    this.idProblema = idProblema;
    this.nombre = nombre;
    this.nombreED = nombreED;
    this.scrollView = scrollView;
    this.telefono = telefono;
    this.telefonoed = telefonoed;
    this.tipoServicio = tipoServicio;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetAdquirPlanesNoticiasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetAdquirPlanesNoticiasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_adquir_planes_noticias, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetAdquirPlanesNoticiasBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Total;
      TextView Total = ViewBindings.findChildViewById(rootView, id);
      if (Total == null) {
        break missingId;
      }

      id = R.id.apellido;
      TextInputLayout apellido = ViewBindings.findChildViewById(rootView, id);
      if (apellido == null) {
        break missingId;
      }

      id = R.id.apellidosED;
      EditText apellidosED = ViewBindings.findChildViewById(rootView, id);
      if (apellidosED == null) {
        break missingId;
      }

      id = R.id.btnApply;
      MaterialButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.cerrar;
      BottomSheetDragHandleView cerrar = ViewBindings.findChildViewById(rootView, id);
      if (cerrar == null) {
        break missingId;
      }

      id = R.id.descripcion;
      TextView descripcion = ViewBindings.findChildViewById(rootView, id);
      if (descripcion == null) {
        break missingId;
      }

      id = R.id.dni;
      TextInputLayout dni = ViewBindings.findChildViewById(rootView, id);
      if (dni == null) {
        break missingId;
      }

      id = R.id.dniED;
      EditText dniED = ViewBindings.findChildViewById(rootView, id);
      if (dniED == null) {
        break missingId;
      }

      id = R.id.fecha;
      TextView fecha = ViewBindings.findChildViewById(rootView, id);
      if (fecha == null) {
        break missingId;
      }

      id = R.id.hora;
      TextView hora = ViewBindings.findChildViewById(rootView, id);
      if (hora == null) {
        break missingId;
      }

      id = R.id.idProblema;
      LinearLayout idProblema = ViewBindings.findChildViewById(rootView, id);
      if (idProblema == null) {
        break missingId;
      }

      id = R.id.nombre;
      TextInputLayout nombre = ViewBindings.findChildViewById(rootView, id);
      if (nombre == null) {
        break missingId;
      }

      id = R.id.nombreED;
      EditText nombreED = ViewBindings.findChildViewById(rootView, id);
      if (nombreED == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.telefono;
      TextInputLayout telefono = ViewBindings.findChildViewById(rootView, id);
      if (telefono == null) {
        break missingId;
      }

      id = R.id.telefonoed;
      EditText telefonoed = ViewBindings.findChildViewById(rootView, id);
      if (telefonoed == null) {
        break missingId;
      }

      id = R.id.tipo_Servicio;
      TextView tipoServicio = ViewBindings.findChildViewById(rootView, id);
      if (tipoServicio == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new BottomSheetAdquirPlanesNoticiasBinding((LinearLayout) rootView, Total, apellido,
          apellidosED, btnApply, btnCancel, cerrar, descripcion, dni, dniED, fecha, hora,
          idProblema, nombre, nombreED, scrollView, telefono, telefonoed, tipoServicio, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
