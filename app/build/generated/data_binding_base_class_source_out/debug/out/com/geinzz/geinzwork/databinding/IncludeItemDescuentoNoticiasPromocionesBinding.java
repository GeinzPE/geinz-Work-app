// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IncludeItemDescuentoNoticiasPromocionesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView descuentoPorcentaje;

  @NonNull
  public final LinearLayout linealPrecio;

  @NonNull
  public final TextView precio;

  @NonNull
  public final TextView textViewPriceBefore;

  private IncludeItemDescuentoNoticiasPromocionesBinding(@NonNull LinearLayout rootView,
      @NonNull TextView descuentoPorcentaje, @NonNull LinearLayout linealPrecio,
      @NonNull TextView precio, @NonNull TextView textViewPriceBefore) {
    this.rootView = rootView;
    this.descuentoPorcentaje = descuentoPorcentaje;
    this.linealPrecio = linealPrecio;
    this.precio = precio;
    this.textViewPriceBefore = textViewPriceBefore;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IncludeItemDescuentoNoticiasPromocionesBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IncludeItemDescuentoNoticiasPromocionesBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.include_item_descuento_noticias_promociones, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IncludeItemDescuentoNoticiasPromocionesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.descuentoPorcentaje;
      TextView descuentoPorcentaje = ViewBindings.findChildViewById(rootView, id);
      if (descuentoPorcentaje == null) {
        break missingId;
      }

      id = R.id.linealPrecio;
      LinearLayout linealPrecio = ViewBindings.findChildViewById(rootView, id);
      if (linealPrecio == null) {
        break missingId;
      }

      id = R.id.precio;
      TextView precio = ViewBindings.findChildViewById(rootView, id);
      if (precio == null) {
        break missingId;
      }

      id = R.id.textViewPriceBefore;
      TextView textViewPriceBefore = ViewBindings.findChildViewById(rootView, id);
      if (textViewPriceBefore == null) {
        break missingId;
      }

      return new IncludeItemDescuentoNoticiasPromocionesBinding((LinearLayout) rootView,
          descuentoPorcentaje, linealPrecio, precio, textViewPriceBefore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
