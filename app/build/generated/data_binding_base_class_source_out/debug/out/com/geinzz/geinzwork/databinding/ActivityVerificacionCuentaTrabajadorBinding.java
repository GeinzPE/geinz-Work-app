// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.geinzz.geinzwork.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVerificacionCuentaTrabajadorBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView PlanB;

  @NonNull
  public final TextView PlanC;

  @NonNull
  public final TextInputLayout apellido;

  @NonNull
  public final EditText apellidoED;

  @NonNull
  public final TextInputLayout certificados;

  @NonNull
  public final EditText certificadosEDs;

  @NonNull
  public final CheckBox checkBoxPoliticas;

  @NonNull
  public final ShapeableImageView comprovantePago;

  @NonNull
  public final TextInputLayout descripcionServicios;

  @NonNull
  public final EditText descripcionServiciosED;

  @NonNull
  public final TextInputLayout dni;

  @NonNull
  public final EditText dniED;

  @NonNull
  public final RelativeLayout enviadoExitosamente;

  @NonNull
  public final TextView fecha;

  @NonNull
  public final TextView hora;

  @NonNull
  public final ShapeableImageView imagenAtras;

  @NonNull
  public final ShapeableImageView imagenFrontal;

  @NonNull
  public final ShapeableImageView imagenPerfil;

  @NonNull
  public final ImageView infoCertificados;

  @NonNull
  public final ImageView infoDescripcionServicios;

  @NonNull
  public final LottieAnimationView lotteSend;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextView montoCancelar;

  @NonNull
  public final TextView mostrarRedes;

  @NonNull
  public final TextInputLayout nombre;

  @NonNull
  public final EditText nombreED;

  @NonNull
  public final TextInputLayout numeroTelf;

  @NonNull
  public final EditText numeroTelfED;

  @NonNull
  public final TextView planSeleccionado;

  @NonNull
  public final AutoCompleteTextView planes;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final FrameLayout progressBarContainer;

  @NonNull
  public final ShapeableImageView qrYape;

  @NonNull
  public final NestedScrollView scroll;

  @NonNull
  public final TextView texto;

  @NonNull
  public final TextView textoPoliticas;

  @NonNull
  public final AppCompatButton verificar;

  private ActivityVerificacionCuentaTrabajadorBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView PlanB, @NonNull TextView PlanC, @NonNull TextInputLayout apellido,
      @NonNull EditText apellidoED, @NonNull TextInputLayout certificados,
      @NonNull EditText certificadosEDs, @NonNull CheckBox checkBoxPoliticas,
      @NonNull ShapeableImageView comprovantePago, @NonNull TextInputLayout descripcionServicios,
      @NonNull EditText descripcionServiciosED, @NonNull TextInputLayout dni,
      @NonNull EditText dniED, @NonNull RelativeLayout enviadoExitosamente, @NonNull TextView fecha,
      @NonNull TextView hora, @NonNull ShapeableImageView imagenAtras,
      @NonNull ShapeableImageView imagenFrontal, @NonNull ShapeableImageView imagenPerfil,
      @NonNull ImageView infoCertificados, @NonNull ImageView infoDescripcionServicios,
      @NonNull LottieAnimationView lotteSend, @NonNull RelativeLayout main,
      @NonNull TextView montoCancelar, @NonNull TextView mostrarRedes,
      @NonNull TextInputLayout nombre, @NonNull EditText nombreED,
      @NonNull TextInputLayout numeroTelf, @NonNull EditText numeroTelfED,
      @NonNull TextView planSeleccionado, @NonNull AutoCompleteTextView planes,
      @NonNull ProgressBar progressBar, @NonNull FrameLayout progressBarContainer,
      @NonNull ShapeableImageView qrYape, @NonNull NestedScrollView scroll, @NonNull TextView texto,
      @NonNull TextView textoPoliticas, @NonNull AppCompatButton verificar) {
    this.rootView = rootView;
    this.PlanB = PlanB;
    this.PlanC = PlanC;
    this.apellido = apellido;
    this.apellidoED = apellidoED;
    this.certificados = certificados;
    this.certificadosEDs = certificadosEDs;
    this.checkBoxPoliticas = checkBoxPoliticas;
    this.comprovantePago = comprovantePago;
    this.descripcionServicios = descripcionServicios;
    this.descripcionServiciosED = descripcionServiciosED;
    this.dni = dni;
    this.dniED = dniED;
    this.enviadoExitosamente = enviadoExitosamente;
    this.fecha = fecha;
    this.hora = hora;
    this.imagenAtras = imagenAtras;
    this.imagenFrontal = imagenFrontal;
    this.imagenPerfil = imagenPerfil;
    this.infoCertificados = infoCertificados;
    this.infoDescripcionServicios = infoDescripcionServicios;
    this.lotteSend = lotteSend;
    this.main = main;
    this.montoCancelar = montoCancelar;
    this.mostrarRedes = mostrarRedes;
    this.nombre = nombre;
    this.nombreED = nombreED;
    this.numeroTelf = numeroTelf;
    this.numeroTelfED = numeroTelfED;
    this.planSeleccionado = planSeleccionado;
    this.planes = planes;
    this.progressBar = progressBar;
    this.progressBarContainer = progressBarContainer;
    this.qrYape = qrYape;
    this.scroll = scroll;
    this.texto = texto;
    this.textoPoliticas = textoPoliticas;
    this.verificar = verificar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerificacionCuentaTrabajadorBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerificacionCuentaTrabajadorBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verificacion_cuenta_trabajador, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerificacionCuentaTrabajadorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.PlanB;
      TextView PlanB = ViewBindings.findChildViewById(rootView, id);
      if (PlanB == null) {
        break missingId;
      }

      id = R.id.PlanC;
      TextView PlanC = ViewBindings.findChildViewById(rootView, id);
      if (PlanC == null) {
        break missingId;
      }

      id = R.id.apellido;
      TextInputLayout apellido = ViewBindings.findChildViewById(rootView, id);
      if (apellido == null) {
        break missingId;
      }

      id = R.id.apellidoED;
      EditText apellidoED = ViewBindings.findChildViewById(rootView, id);
      if (apellidoED == null) {
        break missingId;
      }

      id = R.id.certificados;
      TextInputLayout certificados = ViewBindings.findChildViewById(rootView, id);
      if (certificados == null) {
        break missingId;
      }

      id = R.id.certificadosEDs;
      EditText certificadosEDs = ViewBindings.findChildViewById(rootView, id);
      if (certificadosEDs == null) {
        break missingId;
      }

      id = R.id.checkBoxPoliticas;
      CheckBox checkBoxPoliticas = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxPoliticas == null) {
        break missingId;
      }

      id = R.id.comprovante_pago;
      ShapeableImageView comprovantePago = ViewBindings.findChildViewById(rootView, id);
      if (comprovantePago == null) {
        break missingId;
      }

      id = R.id.descripcionServicios;
      TextInputLayout descripcionServicios = ViewBindings.findChildViewById(rootView, id);
      if (descripcionServicios == null) {
        break missingId;
      }

      id = R.id.descripcionServiciosED;
      EditText descripcionServiciosED = ViewBindings.findChildViewById(rootView, id);
      if (descripcionServiciosED == null) {
        break missingId;
      }

      id = R.id.dni;
      TextInputLayout dni = ViewBindings.findChildViewById(rootView, id);
      if (dni == null) {
        break missingId;
      }

      id = R.id.dniED;
      EditText dniED = ViewBindings.findChildViewById(rootView, id);
      if (dniED == null) {
        break missingId;
      }

      id = R.id.enviado_exitosamente;
      RelativeLayout enviadoExitosamente = ViewBindings.findChildViewById(rootView, id);
      if (enviadoExitosamente == null) {
        break missingId;
      }

      id = R.id.fecha;
      TextView fecha = ViewBindings.findChildViewById(rootView, id);
      if (fecha == null) {
        break missingId;
      }

      id = R.id.hora;
      TextView hora = ViewBindings.findChildViewById(rootView, id);
      if (hora == null) {
        break missingId;
      }

      id = R.id.imagenAtras;
      ShapeableImageView imagenAtras = ViewBindings.findChildViewById(rootView, id);
      if (imagenAtras == null) {
        break missingId;
      }

      id = R.id.imagenFrontal;
      ShapeableImageView imagenFrontal = ViewBindings.findChildViewById(rootView, id);
      if (imagenFrontal == null) {
        break missingId;
      }

      id = R.id.imagenPerfil;
      ShapeableImageView imagenPerfil = ViewBindings.findChildViewById(rootView, id);
      if (imagenPerfil == null) {
        break missingId;
      }

      id = R.id.infoCertificados;
      ImageView infoCertificados = ViewBindings.findChildViewById(rootView, id);
      if (infoCertificados == null) {
        break missingId;
      }

      id = R.id.infoDescripcion_Servicios;
      ImageView infoDescripcionServicios = ViewBindings.findChildViewById(rootView, id);
      if (infoDescripcionServicios == null) {
        break missingId;
      }

      id = R.id.lotteSend;
      LottieAnimationView lotteSend = ViewBindings.findChildViewById(rootView, id);
      if (lotteSend == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.monto_cancelar;
      TextView montoCancelar = ViewBindings.findChildViewById(rootView, id);
      if (montoCancelar == null) {
        break missingId;
      }

      id = R.id.mostrarRedes;
      TextView mostrarRedes = ViewBindings.findChildViewById(rootView, id);
      if (mostrarRedes == null) {
        break missingId;
      }

      id = R.id.nombre;
      TextInputLayout nombre = ViewBindings.findChildViewById(rootView, id);
      if (nombre == null) {
        break missingId;
      }

      id = R.id.nombreED;
      EditText nombreED = ViewBindings.findChildViewById(rootView, id);
      if (nombreED == null) {
        break missingId;
      }

      id = R.id.numeroTelf;
      TextInputLayout numeroTelf = ViewBindings.findChildViewById(rootView, id);
      if (numeroTelf == null) {
        break missingId;
      }

      id = R.id.numeroTelfED;
      EditText numeroTelfED = ViewBindings.findChildViewById(rootView, id);
      if (numeroTelfED == null) {
        break missingId;
      }

      id = R.id.plan_seleccionado;
      TextView planSeleccionado = ViewBindings.findChildViewById(rootView, id);
      if (planSeleccionado == null) {
        break missingId;
      }

      id = R.id.planes;
      AutoCompleteTextView planes = ViewBindings.findChildViewById(rootView, id);
      if (planes == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressBarContainer;
      FrameLayout progressBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (progressBarContainer == null) {
        break missingId;
      }

      id = R.id.qrYape;
      ShapeableImageView qrYape = ViewBindings.findChildViewById(rootView, id);
      if (qrYape == null) {
        break missingId;
      }

      id = R.id.scroll;
      NestedScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.texto;
      TextView texto = ViewBindings.findChildViewById(rootView, id);
      if (texto == null) {
        break missingId;
      }

      id = R.id.textoPoliticas;
      TextView textoPoliticas = ViewBindings.findChildViewById(rootView, id);
      if (textoPoliticas == null) {
        break missingId;
      }

      id = R.id.verificar;
      AppCompatButton verificar = ViewBindings.findChildViewById(rootView, id);
      if (verificar == null) {
        break missingId;
      }

      return new ActivityVerificacionCuentaTrabajadorBinding((RelativeLayout) rootView, PlanB,
          PlanC, apellido, apellidoED, certificados, certificadosEDs, checkBoxPoliticas,
          comprovantePago, descripcionServicios, descripcionServiciosED, dni, dniED,
          enviadoExitosamente, fecha, hora, imagenAtras, imagenFrontal, imagenPerfil,
          infoCertificados, infoDescripcionServicios, lotteSend, main, montoCancelar, mostrarRedes,
          nombre, nombreED, numeroTelf, numeroTelfED, planSeleccionado, planes, progressBar,
          progressBarContainer, qrYape, scroll, texto, textoPoliticas, verificar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
