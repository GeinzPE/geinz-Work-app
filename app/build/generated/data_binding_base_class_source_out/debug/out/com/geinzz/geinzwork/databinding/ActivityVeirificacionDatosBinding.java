// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.imageview.ShapeableImageView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVeirificacionDatosBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView CorreoUsuario;

  @NonNull
  public final TextView LocaludaUser;

  @NonNull
  public final TextView NumeroTelf;

  @NonNull
  public final TextView TipoCuenta;

  @NonNull
  public final TextView apellidoUSer;

  @NonNull
  public final AppCompatButton btnConfiramrDatos;

  @NonNull
  public final TextView carracteristicasUser;

  @NonNull
  public final TextView cat;

  @NonNull
  public final CheckBox checkBoxPoliticas;

  @NonNull
  public final TextView confirmacionDatosTitle;

  @NonNull
  public final LinearLayout contenedorDatos;

  @NonNull
  public final TextView edadUser;

  @NonNull
  public final TextView fechaNaciminetoUSer;

  @NonNull
  public final ShapeableImageView fotoPortada;

  @NonNull
  public final TextView freelancer;

  @NonNull
  public final TextView geinz;

  @NonNull
  public final TextView genero;

  @NonNull
  public final TextView horarioUser;

  @NonNull
  public final CircleImageView imgPerfil;

  @NonNull
  public final LinearLayout linealCaracteristicas;

  @NonNull
  public final LinearLayout linealCategoriaT;

  @NonNull
  public final LinearLayout linealHorario;

  @NonNull
  public final LinearLayout linealTipoTrabajo;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextView nacionnalidadUser;

  @NonNull
  public final TextView nombreUser;

  @NonNull
  public final View overlay;

  @NonNull
  public final TextView textoPoliticas;

  @NonNull
  public final TextView tipoTrabajores;

  @NonNull
  public final TextView titleConfirmacion;

  private ActivityVeirificacionDatosBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView CorreoUsuario, @NonNull TextView LocaludaUser, @NonNull TextView NumeroTelf,
      @NonNull TextView TipoCuenta, @NonNull TextView apellidoUSer,
      @NonNull AppCompatButton btnConfiramrDatos, @NonNull TextView carracteristicasUser,
      @NonNull TextView cat, @NonNull CheckBox checkBoxPoliticas,
      @NonNull TextView confirmacionDatosTitle, @NonNull LinearLayout contenedorDatos,
      @NonNull TextView edadUser, @NonNull TextView fechaNaciminetoUSer,
      @NonNull ShapeableImageView fotoPortada, @NonNull TextView freelancer,
      @NonNull TextView geinz, @NonNull TextView genero, @NonNull TextView horarioUser,
      @NonNull CircleImageView imgPerfil, @NonNull LinearLayout linealCaracteristicas,
      @NonNull LinearLayout linealCategoriaT, @NonNull LinearLayout linealHorario,
      @NonNull LinearLayout linealTipoTrabajo, @NonNull RelativeLayout main,
      @NonNull TextView nacionnalidadUser, @NonNull TextView nombreUser, @NonNull View overlay,
      @NonNull TextView textoPoliticas, @NonNull TextView tipoTrabajores,
      @NonNull TextView titleConfirmacion) {
    this.rootView = rootView;
    this.CorreoUsuario = CorreoUsuario;
    this.LocaludaUser = LocaludaUser;
    this.NumeroTelf = NumeroTelf;
    this.TipoCuenta = TipoCuenta;
    this.apellidoUSer = apellidoUSer;
    this.btnConfiramrDatos = btnConfiramrDatos;
    this.carracteristicasUser = carracteristicasUser;
    this.cat = cat;
    this.checkBoxPoliticas = checkBoxPoliticas;
    this.confirmacionDatosTitle = confirmacionDatosTitle;
    this.contenedorDatos = contenedorDatos;
    this.edadUser = edadUser;
    this.fechaNaciminetoUSer = fechaNaciminetoUSer;
    this.fotoPortada = fotoPortada;
    this.freelancer = freelancer;
    this.geinz = geinz;
    this.genero = genero;
    this.horarioUser = horarioUser;
    this.imgPerfil = imgPerfil;
    this.linealCaracteristicas = linealCaracteristicas;
    this.linealCategoriaT = linealCategoriaT;
    this.linealHorario = linealHorario;
    this.linealTipoTrabajo = linealTipoTrabajo;
    this.main = main;
    this.nacionnalidadUser = nacionnalidadUser;
    this.nombreUser = nombreUser;
    this.overlay = overlay;
    this.textoPoliticas = textoPoliticas;
    this.tipoTrabajores = tipoTrabajores;
    this.titleConfirmacion = titleConfirmacion;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVeirificacionDatosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVeirificacionDatosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_veirificacion_datos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVeirificacionDatosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CorreoUsuario;
      TextView CorreoUsuario = ViewBindings.findChildViewById(rootView, id);
      if (CorreoUsuario == null) {
        break missingId;
      }

      id = R.id.LocaludaUser;
      TextView LocaludaUser = ViewBindings.findChildViewById(rootView, id);
      if (LocaludaUser == null) {
        break missingId;
      }

      id = R.id.NumeroTelf;
      TextView NumeroTelf = ViewBindings.findChildViewById(rootView, id);
      if (NumeroTelf == null) {
        break missingId;
      }

      id = R.id.TipoCuenta;
      TextView TipoCuenta = ViewBindings.findChildViewById(rootView, id);
      if (TipoCuenta == null) {
        break missingId;
      }

      id = R.id.apellidoUSer;
      TextView apellidoUSer = ViewBindings.findChildViewById(rootView, id);
      if (apellidoUSer == null) {
        break missingId;
      }

      id = R.id.btnConfiramrDatos;
      AppCompatButton btnConfiramrDatos = ViewBindings.findChildViewById(rootView, id);
      if (btnConfiramrDatos == null) {
        break missingId;
      }

      id = R.id.carracteristicasUser;
      TextView carracteristicasUser = ViewBindings.findChildViewById(rootView, id);
      if (carracteristicasUser == null) {
        break missingId;
      }

      id = R.id.cat;
      TextView cat = ViewBindings.findChildViewById(rootView, id);
      if (cat == null) {
        break missingId;
      }

      id = R.id.checkBoxPoliticas;
      CheckBox checkBoxPoliticas = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxPoliticas == null) {
        break missingId;
      }

      id = R.id.confirmacion_datos_title;
      TextView confirmacionDatosTitle = ViewBindings.findChildViewById(rootView, id);
      if (confirmacionDatosTitle == null) {
        break missingId;
      }

      id = R.id.contenedor_datos;
      LinearLayout contenedorDatos = ViewBindings.findChildViewById(rootView, id);
      if (contenedorDatos == null) {
        break missingId;
      }

      id = R.id.edadUser;
      TextView edadUser = ViewBindings.findChildViewById(rootView, id);
      if (edadUser == null) {
        break missingId;
      }

      id = R.id.fechaNaciminetoUSer;
      TextView fechaNaciminetoUSer = ViewBindings.findChildViewById(rootView, id);
      if (fechaNaciminetoUSer == null) {
        break missingId;
      }

      id = R.id.foto_portada;
      ShapeableImageView fotoPortada = ViewBindings.findChildViewById(rootView, id);
      if (fotoPortada == null) {
        break missingId;
      }

      id = R.id.freelancer;
      TextView freelancer = ViewBindings.findChildViewById(rootView, id);
      if (freelancer == null) {
        break missingId;
      }

      id = R.id.geinz;
      TextView geinz = ViewBindings.findChildViewById(rootView, id);
      if (geinz == null) {
        break missingId;
      }

      id = R.id.genero;
      TextView genero = ViewBindings.findChildViewById(rootView, id);
      if (genero == null) {
        break missingId;
      }

      id = R.id.horarioUser;
      TextView horarioUser = ViewBindings.findChildViewById(rootView, id);
      if (horarioUser == null) {
        break missingId;
      }

      id = R.id.img_perfil;
      CircleImageView imgPerfil = ViewBindings.findChildViewById(rootView, id);
      if (imgPerfil == null) {
        break missingId;
      }

      id = R.id.linealCaracteristicas;
      LinearLayout linealCaracteristicas = ViewBindings.findChildViewById(rootView, id);
      if (linealCaracteristicas == null) {
        break missingId;
      }

      id = R.id.linealCategoriaT;
      LinearLayout linealCategoriaT = ViewBindings.findChildViewById(rootView, id);
      if (linealCategoriaT == null) {
        break missingId;
      }

      id = R.id.linealHorario;
      LinearLayout linealHorario = ViewBindings.findChildViewById(rootView, id);
      if (linealHorario == null) {
        break missingId;
      }

      id = R.id.linealTipoTrabajo;
      LinearLayout linealTipoTrabajo = ViewBindings.findChildViewById(rootView, id);
      if (linealTipoTrabajo == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.nacionnalidadUser;
      TextView nacionnalidadUser = ViewBindings.findChildViewById(rootView, id);
      if (nacionnalidadUser == null) {
        break missingId;
      }

      id = R.id.nombreUser;
      TextView nombreUser = ViewBindings.findChildViewById(rootView, id);
      if (nombreUser == null) {
        break missingId;
      }

      id = R.id.overlay;
      View overlay = ViewBindings.findChildViewById(rootView, id);
      if (overlay == null) {
        break missingId;
      }

      id = R.id.textoPoliticas;
      TextView textoPoliticas = ViewBindings.findChildViewById(rootView, id);
      if (textoPoliticas == null) {
        break missingId;
      }

      id = R.id.tipo_trabajores;
      TextView tipoTrabajores = ViewBindings.findChildViewById(rootView, id);
      if (tipoTrabajores == null) {
        break missingId;
      }

      id = R.id.title_confirmacion;
      TextView titleConfirmacion = ViewBindings.findChildViewById(rootView, id);
      if (titleConfirmacion == null) {
        break missingId;
      }

      return new ActivityVeirificacionDatosBinding((RelativeLayout) rootView, CorreoUsuario,
          LocaludaUser, NumeroTelf, TipoCuenta, apellidoUSer, btnConfiramrDatos,
          carracteristicasUser, cat, checkBoxPoliticas, confirmacionDatosTitle, contenedorDatos,
          edadUser, fechaNaciminetoUSer, fotoPortada, freelancer, geinz, genero, horarioUser,
          imgPerfil, linealCaracteristicas, linealCategoriaT, linealHorario, linealTipoTrabajo,
          main, nacionnalidadUser, nombreUser, overlay, textoPoliticas, tipoTrabajores,
          titleConfirmacion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
