// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IncludeDescripcionPromoArtBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView cantidadDisponible;

  @NonNull
  public final Button comprar;

  @NonNull
  public final TextView contenido;

  @NonNull
  public final TextView contenidoCorto;

  @NonNull
  public final TextView precio;

  @NonNull
  public final Button reservar;

  @NonNull
  public final TextView titulo;

  @NonNull
  public final TextView tvReadMore;

  private IncludeDescripcionPromoArtBinding(@NonNull LinearLayout rootView,
      @NonNull TextView cantidadDisponible, @NonNull Button comprar, @NonNull TextView contenido,
      @NonNull TextView contenidoCorto, @NonNull TextView precio, @NonNull Button reservar,
      @NonNull TextView titulo, @NonNull TextView tvReadMore) {
    this.rootView = rootView;
    this.cantidadDisponible = cantidadDisponible;
    this.comprar = comprar;
    this.contenido = contenido;
    this.contenidoCorto = contenidoCorto;
    this.precio = precio;
    this.reservar = reservar;
    this.titulo = titulo;
    this.tvReadMore = tvReadMore;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IncludeDescripcionPromoArtBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IncludeDescripcionPromoArtBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.include_descripcion_promo_art, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IncludeDescripcionPromoArtBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cantidadDisponible;
      TextView cantidadDisponible = ViewBindings.findChildViewById(rootView, id);
      if (cantidadDisponible == null) {
        break missingId;
      }

      id = R.id.comprar;
      Button comprar = ViewBindings.findChildViewById(rootView, id);
      if (comprar == null) {
        break missingId;
      }

      id = R.id.contenido;
      TextView contenido = ViewBindings.findChildViewById(rootView, id);
      if (contenido == null) {
        break missingId;
      }

      id = R.id.contenido_corto;
      TextView contenidoCorto = ViewBindings.findChildViewById(rootView, id);
      if (contenidoCorto == null) {
        break missingId;
      }

      id = R.id.precio;
      TextView precio = ViewBindings.findChildViewById(rootView, id);
      if (precio == null) {
        break missingId;
      }

      id = R.id.reservar;
      Button reservar = ViewBindings.findChildViewById(rootView, id);
      if (reservar == null) {
        break missingId;
      }

      id = R.id.titulo;
      TextView titulo = ViewBindings.findChildViewById(rootView, id);
      if (titulo == null) {
        break missingId;
      }

      id = R.id.tvReadMore;
      TextView tvReadMore = ViewBindings.findChildViewById(rootView, id);
      if (tvReadMore == null) {
        break missingId;
      }

      return new IncludeDescripcionPromoArtBinding((LinearLayout) rootView, cantidadDisponible,
          comprar, contenido, contenidoCorto, precio, reservar, titulo, tvReadMore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
