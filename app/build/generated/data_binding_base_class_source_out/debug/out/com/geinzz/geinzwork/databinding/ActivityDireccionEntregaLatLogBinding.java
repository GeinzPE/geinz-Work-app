// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDireccionEntregaLatLogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ProgressBar cargandoLatLog;

  @NonNull
  public final TextView collectionEcontrado;

  @NonNull
  public final RelativeLayout containerSinUBI;

  @NonNull
  public final MaterialButton crear;

  @NonNull
  public final EditText direccion;

  @NonNull
  public final TextInputLayout direccionCasa;

  @NonNull
  public final EditText direccionCasaED;

  @NonNull
  public final MaterialButton editar;

  @NonNull
  public final MaterialButton eliminar;

  @NonNull
  public final TextView idReferencia;

  @NonNull
  public final ImageView imgLocalizacion;

  @NonNull
  public final ImageButton infoCasa;

  @NonNull
  public final ImageButton infoRef;

  @NonNull
  public final TextView latitudUSer;

  @NonNull
  public final LinearLayout linealBtnELiminarEditar;

  @NonNull
  public final LinearLayout linealForm;

  @NonNull
  public final LinearLayout linealubiActual;

  @NonNull
  public final ListView listaUbicaciones;

  @NonNull
  public final TextView longituduser;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextInputLayout nombreColeccion;

  @NonNull
  public final EditText nombreColeccionED;

  @NonNull
  public final ImageButton nombreColecciones;

  @NonNull
  public final TextInputLayout numeropersonasint;

  @NonNull
  public final ImageButton obtenerLocalizacion;

  @NonNull
  public final TextInputLayout referencia;

  @NonNull
  public final EditText referenciaED;

  private ActivityDireccionEntregaLatLogBinding(@NonNull RelativeLayout rootView,
      @NonNull ProgressBar cargandoLatLog, @NonNull TextView collectionEcontrado,
      @NonNull RelativeLayout containerSinUBI, @NonNull MaterialButton crear,
      @NonNull EditText direccion, @NonNull TextInputLayout direccionCasa,
      @NonNull EditText direccionCasaED, @NonNull MaterialButton editar,
      @NonNull MaterialButton eliminar, @NonNull TextView idReferencia,
      @NonNull ImageView imgLocalizacion, @NonNull ImageButton infoCasa,
      @NonNull ImageButton infoRef, @NonNull TextView latitudUSer,
      @NonNull LinearLayout linealBtnELiminarEditar, @NonNull LinearLayout linealForm,
      @NonNull LinearLayout linealubiActual, @NonNull ListView listaUbicaciones,
      @NonNull TextView longituduser, @NonNull RelativeLayout main,
      @NonNull TextInputLayout nombreColeccion, @NonNull EditText nombreColeccionED,
      @NonNull ImageButton nombreColecciones, @NonNull TextInputLayout numeropersonasint,
      @NonNull ImageButton obtenerLocalizacion, @NonNull TextInputLayout referencia,
      @NonNull EditText referenciaED) {
    this.rootView = rootView;
    this.cargandoLatLog = cargandoLatLog;
    this.collectionEcontrado = collectionEcontrado;
    this.containerSinUBI = containerSinUBI;
    this.crear = crear;
    this.direccion = direccion;
    this.direccionCasa = direccionCasa;
    this.direccionCasaED = direccionCasaED;
    this.editar = editar;
    this.eliminar = eliminar;
    this.idReferencia = idReferencia;
    this.imgLocalizacion = imgLocalizacion;
    this.infoCasa = infoCasa;
    this.infoRef = infoRef;
    this.latitudUSer = latitudUSer;
    this.linealBtnELiminarEditar = linealBtnELiminarEditar;
    this.linealForm = linealForm;
    this.linealubiActual = linealubiActual;
    this.listaUbicaciones = listaUbicaciones;
    this.longituduser = longituduser;
    this.main = main;
    this.nombreColeccion = nombreColeccion;
    this.nombreColeccionED = nombreColeccionED;
    this.nombreColecciones = nombreColecciones;
    this.numeropersonasint = numeropersonasint;
    this.obtenerLocalizacion = obtenerLocalizacion;
    this.referencia = referencia;
    this.referenciaED = referenciaED;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDireccionEntregaLatLogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDireccionEntregaLatLogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_direccion_entrega_lat_log, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDireccionEntregaLatLogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cargando_lat_log;
      ProgressBar cargandoLatLog = ViewBindings.findChildViewById(rootView, id);
      if (cargandoLatLog == null) {
        break missingId;
      }

      id = R.id.collectionEcontrado;
      TextView collectionEcontrado = ViewBindings.findChildViewById(rootView, id);
      if (collectionEcontrado == null) {
        break missingId;
      }

      id = R.id.containerSinUBI;
      RelativeLayout containerSinUBI = ViewBindings.findChildViewById(rootView, id);
      if (containerSinUBI == null) {
        break missingId;
      }

      id = R.id.crear;
      MaterialButton crear = ViewBindings.findChildViewById(rootView, id);
      if (crear == null) {
        break missingId;
      }

      id = R.id.direccion;
      EditText direccion = ViewBindings.findChildViewById(rootView, id);
      if (direccion == null) {
        break missingId;
      }

      id = R.id.direccion_casa;
      TextInputLayout direccionCasa = ViewBindings.findChildViewById(rootView, id);
      if (direccionCasa == null) {
        break missingId;
      }

      id = R.id.direccion_casaED;
      EditText direccionCasaED = ViewBindings.findChildViewById(rootView, id);
      if (direccionCasaED == null) {
        break missingId;
      }

      id = R.id.editar;
      MaterialButton editar = ViewBindings.findChildViewById(rootView, id);
      if (editar == null) {
        break missingId;
      }

      id = R.id.eliminar;
      MaterialButton eliminar = ViewBindings.findChildViewById(rootView, id);
      if (eliminar == null) {
        break missingId;
      }

      id = R.id.idReferencia;
      TextView idReferencia = ViewBindings.findChildViewById(rootView, id);
      if (idReferencia == null) {
        break missingId;
      }

      id = R.id.imgLocalizacion;
      ImageView imgLocalizacion = ViewBindings.findChildViewById(rootView, id);
      if (imgLocalizacion == null) {
        break missingId;
      }

      id = R.id.infoCasa;
      ImageButton infoCasa = ViewBindings.findChildViewById(rootView, id);
      if (infoCasa == null) {
        break missingId;
      }

      id = R.id.infoRef;
      ImageButton infoRef = ViewBindings.findChildViewById(rootView, id);
      if (infoRef == null) {
        break missingId;
      }

      id = R.id.latitudUSer;
      TextView latitudUSer = ViewBindings.findChildViewById(rootView, id);
      if (latitudUSer == null) {
        break missingId;
      }

      id = R.id.linealBtnELiminarEditar;
      LinearLayout linealBtnELiminarEditar = ViewBindings.findChildViewById(rootView, id);
      if (linealBtnELiminarEditar == null) {
        break missingId;
      }

      id = R.id.lineal_form;
      LinearLayout linealForm = ViewBindings.findChildViewById(rootView, id);
      if (linealForm == null) {
        break missingId;
      }

      id = R.id.linealubiActual;
      LinearLayout linealubiActual = ViewBindings.findChildViewById(rootView, id);
      if (linealubiActual == null) {
        break missingId;
      }

      id = R.id.lista_Ubicaciones;
      ListView listaUbicaciones = ViewBindings.findChildViewById(rootView, id);
      if (listaUbicaciones == null) {
        break missingId;
      }

      id = R.id.longituduser;
      TextView longituduser = ViewBindings.findChildViewById(rootView, id);
      if (longituduser == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.nombreColeccion;
      TextInputLayout nombreColeccion = ViewBindings.findChildViewById(rootView, id);
      if (nombreColeccion == null) {
        break missingId;
      }

      id = R.id.nombreColeccionED;
      EditText nombreColeccionED = ViewBindings.findChildViewById(rootView, id);
      if (nombreColeccionED == null) {
        break missingId;
      }

      id = R.id.nombreColecciones;
      ImageButton nombreColecciones = ViewBindings.findChildViewById(rootView, id);
      if (nombreColecciones == null) {
        break missingId;
      }

      id = R.id.numeropersonasint;
      TextInputLayout numeropersonasint = ViewBindings.findChildViewById(rootView, id);
      if (numeropersonasint == null) {
        break missingId;
      }

      id = R.id.obtenerLocalizacion;
      ImageButton obtenerLocalizacion = ViewBindings.findChildViewById(rootView, id);
      if (obtenerLocalizacion == null) {
        break missingId;
      }

      id = R.id.referencia;
      TextInputLayout referencia = ViewBindings.findChildViewById(rootView, id);
      if (referencia == null) {
        break missingId;
      }

      id = R.id.referenciaED;
      EditText referenciaED = ViewBindings.findChildViewById(rootView, id);
      if (referenciaED == null) {
        break missingId;
      }

      return new ActivityDireccionEntregaLatLogBinding((RelativeLayout) rootView, cargandoLatLog,
          collectionEcontrado, containerSinUBI, crear, direccion, direccionCasa, direccionCasaED,
          editar, eliminar, idReferencia, imgLocalizacion, infoCasa, infoRef, latitudUSer,
          linealBtnELiminarEditar, linealForm, linealubiActual, listaUbicaciones, longituduser,
          main, nombreColeccion, nombreColeccionED, nombreColecciones, numeropersonasint,
          obtenerLocalizacion, referencia, referenciaED);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
