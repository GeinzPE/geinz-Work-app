// Generated by view binder compiler. Do not edit!
package com.geinzz.geinzwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geinzz.geinzwork.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetReservasBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioButton Efectivo;

  @NonNull
  public final TextView FechaActual;

  @NonNull
  public final RadioButton Yape;

  @NonNull
  public final TextInputLayout apellidoint;

  @NonNull
  public final EditText apellidouser;

  @NonNull
  public final MaterialButton btnApply;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final BottomSheetDragHandleView cerrar;

  @NonNull
  public final EditText dniUser;

  @NonNull
  public final TextInputLayout dniint;

  @NonNull
  public final TextInputLayout fechaimt;

  @NonNull
  public final EditText fechareserva;

  @NonNull
  public final TextView horaActual;

  @NonNull
  public final TextInputLayout horaint;

  @NonNull
  public final EditText horareserva;

  @NonNull
  public final ShapeableImageView imagenPlin;

  @NonNull
  public final ShapeableImageView imagenYape;

  @NonNull
  public final ImageButton imageviewSubir;

  @NonNull
  public final LinearLayout layoutYape;

  @NonNull
  public final LinearLayout lineaLocalida;

  @NonNull
  public final LinearLayout linealMontoDelServicio;

  @NonNull
  public final AutoCompleteTextView localida;

  @NonNull
  public final AutoCompleteTextView localidad;

  @NonNull
  public final RadioGroup metodoPago;

  @NonNull
  public final TextView montoTotal;

  @NonNull
  public final TextView nombreSevicio;

  @NonNull
  public final EditText nombreUser;

  @NonNull
  public final TextInputLayout nombreint;

  @NonNull
  public final EditText numeroContacto;

  @NonNull
  public final TextInputLayout numeroint;

  @NonNull
  public final TextView pagoEfectivo;

  @NonNull
  public final RadioButton plin;

  @NonNull
  public final NestedScrollView scrollViewid;

  @NonNull
  public final TextView servicioProducto;

  @NonNull
  public final TextView textoMetodoPago;

  @NonNull
  public final TextView tvTitle;

  private BottomSheetReservasBinding(@NonNull LinearLayout rootView, @NonNull RadioButton Efectivo,
      @NonNull TextView FechaActual, @NonNull RadioButton Yape,
      @NonNull TextInputLayout apellidoint, @NonNull EditText apellidouser,
      @NonNull MaterialButton btnApply, @NonNull MaterialButton btnCancel,
      @NonNull BottomSheetDragHandleView cerrar, @NonNull EditText dniUser,
      @NonNull TextInputLayout dniint, @NonNull TextInputLayout fechaimt,
      @NonNull EditText fechareserva, @NonNull TextView horaActual,
      @NonNull TextInputLayout horaint, @NonNull EditText horareserva,
      @NonNull ShapeableImageView imagenPlin, @NonNull ShapeableImageView imagenYape,
      @NonNull ImageButton imageviewSubir, @NonNull LinearLayout layoutYape,
      @NonNull LinearLayout lineaLocalida, @NonNull LinearLayout linealMontoDelServicio,
      @NonNull AutoCompleteTextView localida, @NonNull AutoCompleteTextView localidad,
      @NonNull RadioGroup metodoPago, @NonNull TextView montoTotal, @NonNull TextView nombreSevicio,
      @NonNull EditText nombreUser, @NonNull TextInputLayout nombreint,
      @NonNull EditText numeroContacto, @NonNull TextInputLayout numeroint,
      @NonNull TextView pagoEfectivo, @NonNull RadioButton plin,
      @NonNull NestedScrollView scrollViewid, @NonNull TextView servicioProducto,
      @NonNull TextView textoMetodoPago, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.Efectivo = Efectivo;
    this.FechaActual = FechaActual;
    this.Yape = Yape;
    this.apellidoint = apellidoint;
    this.apellidouser = apellidouser;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.cerrar = cerrar;
    this.dniUser = dniUser;
    this.dniint = dniint;
    this.fechaimt = fechaimt;
    this.fechareserva = fechareserva;
    this.horaActual = horaActual;
    this.horaint = horaint;
    this.horareserva = horareserva;
    this.imagenPlin = imagenPlin;
    this.imagenYape = imagenYape;
    this.imageviewSubir = imageviewSubir;
    this.layoutYape = layoutYape;
    this.lineaLocalida = lineaLocalida;
    this.linealMontoDelServicio = linealMontoDelServicio;
    this.localida = localida;
    this.localidad = localidad;
    this.metodoPago = metodoPago;
    this.montoTotal = montoTotal;
    this.nombreSevicio = nombreSevicio;
    this.nombreUser = nombreUser;
    this.nombreint = nombreint;
    this.numeroContacto = numeroContacto;
    this.numeroint = numeroint;
    this.pagoEfectivo = pagoEfectivo;
    this.plin = plin;
    this.scrollViewid = scrollViewid;
    this.servicioProducto = servicioProducto;
    this.textoMetodoPago = textoMetodoPago;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetReservasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetReservasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_reservas, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetReservasBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Efectivo;
      RadioButton Efectivo = ViewBindings.findChildViewById(rootView, id);
      if (Efectivo == null) {
        break missingId;
      }

      id = R.id.FechaActual;
      TextView FechaActual = ViewBindings.findChildViewById(rootView, id);
      if (FechaActual == null) {
        break missingId;
      }

      id = R.id.Yape;
      RadioButton Yape = ViewBindings.findChildViewById(rootView, id);
      if (Yape == null) {
        break missingId;
      }

      id = R.id.apellidoint;
      TextInputLayout apellidoint = ViewBindings.findChildViewById(rootView, id);
      if (apellidoint == null) {
        break missingId;
      }

      id = R.id.apellidouser;
      EditText apellidouser = ViewBindings.findChildViewById(rootView, id);
      if (apellidouser == null) {
        break missingId;
      }

      id = R.id.btnApply;
      MaterialButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.cerrar;
      BottomSheetDragHandleView cerrar = ViewBindings.findChildViewById(rootView, id);
      if (cerrar == null) {
        break missingId;
      }

      id = R.id.dniUser;
      EditText dniUser = ViewBindings.findChildViewById(rootView, id);
      if (dniUser == null) {
        break missingId;
      }

      id = R.id.dniint;
      TextInputLayout dniint = ViewBindings.findChildViewById(rootView, id);
      if (dniint == null) {
        break missingId;
      }

      id = R.id.fechaimt;
      TextInputLayout fechaimt = ViewBindings.findChildViewById(rootView, id);
      if (fechaimt == null) {
        break missingId;
      }

      id = R.id.fechareserva;
      EditText fechareserva = ViewBindings.findChildViewById(rootView, id);
      if (fechareserva == null) {
        break missingId;
      }

      id = R.id.horaActual;
      TextView horaActual = ViewBindings.findChildViewById(rootView, id);
      if (horaActual == null) {
        break missingId;
      }

      id = R.id.horaint;
      TextInputLayout horaint = ViewBindings.findChildViewById(rootView, id);
      if (horaint == null) {
        break missingId;
      }

      id = R.id.horareserva;
      EditText horareserva = ViewBindings.findChildViewById(rootView, id);
      if (horareserva == null) {
        break missingId;
      }

      id = R.id.imagen_plin;
      ShapeableImageView imagenPlin = ViewBindings.findChildViewById(rootView, id);
      if (imagenPlin == null) {
        break missingId;
      }

      id = R.id.imagen_yape;
      ShapeableImageView imagenYape = ViewBindings.findChildViewById(rootView, id);
      if (imagenYape == null) {
        break missingId;
      }

      id = R.id.imageviewSubir;
      ImageButton imageviewSubir = ViewBindings.findChildViewById(rootView, id);
      if (imageviewSubir == null) {
        break missingId;
      }

      id = R.id.layout_yape;
      LinearLayout layoutYape = ViewBindings.findChildViewById(rootView, id);
      if (layoutYape == null) {
        break missingId;
      }

      id = R.id.lineaLocalida;
      LinearLayout lineaLocalida = ViewBindings.findChildViewById(rootView, id);
      if (lineaLocalida == null) {
        break missingId;
      }

      id = R.id.linealMontoDel_servicio;
      LinearLayout linealMontoDelServicio = ViewBindings.findChildViewById(rootView, id);
      if (linealMontoDelServicio == null) {
        break missingId;
      }

      id = R.id.localida;
      AutoCompleteTextView localida = ViewBindings.findChildViewById(rootView, id);
      if (localida == null) {
        break missingId;
      }

      id = R.id.localidad;
      AutoCompleteTextView localidad = ViewBindings.findChildViewById(rootView, id);
      if (localidad == null) {
        break missingId;
      }

      id = R.id.metodoPago;
      RadioGroup metodoPago = ViewBindings.findChildViewById(rootView, id);
      if (metodoPago == null) {
        break missingId;
      }

      id = R.id.montoTotal;
      TextView montoTotal = ViewBindings.findChildViewById(rootView, id);
      if (montoTotal == null) {
        break missingId;
      }

      id = R.id.nombreSevicio;
      TextView nombreSevicio = ViewBindings.findChildViewById(rootView, id);
      if (nombreSevicio == null) {
        break missingId;
      }

      id = R.id.nombreUser;
      EditText nombreUser = ViewBindings.findChildViewById(rootView, id);
      if (nombreUser == null) {
        break missingId;
      }

      id = R.id.nombreint;
      TextInputLayout nombreint = ViewBindings.findChildViewById(rootView, id);
      if (nombreint == null) {
        break missingId;
      }

      id = R.id.numeroContacto;
      EditText numeroContacto = ViewBindings.findChildViewById(rootView, id);
      if (numeroContacto == null) {
        break missingId;
      }

      id = R.id.numeroint;
      TextInputLayout numeroint = ViewBindings.findChildViewById(rootView, id);
      if (numeroint == null) {
        break missingId;
      }

      id = R.id.pago_efectivo;
      TextView pagoEfectivo = ViewBindings.findChildViewById(rootView, id);
      if (pagoEfectivo == null) {
        break missingId;
      }

      id = R.id.plin;
      RadioButton plin = ViewBindings.findChildViewById(rootView, id);
      if (plin == null) {
        break missingId;
      }

      id = R.id.scrollViewid;
      NestedScrollView scrollViewid = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewid == null) {
        break missingId;
      }

      id = R.id.servicio_producto;
      TextView servicioProducto = ViewBindings.findChildViewById(rootView, id);
      if (servicioProducto == null) {
        break missingId;
      }

      id = R.id.textoMetodo_pago;
      TextView textoMetodoPago = ViewBindings.findChildViewById(rootView, id);
      if (textoMetodoPago == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new BottomSheetReservasBinding((LinearLayout) rootView, Efectivo, FechaActual, Yape,
          apellidoint, apellidouser, btnApply, btnCancel, cerrar, dniUser, dniint, fechaimt,
          fechareserva, horaActual, horaint, horareserva, imagenPlin, imagenYape, imageviewSubir,
          layoutYape, lineaLocalida, linealMontoDelServicio, localida, localidad, metodoPago,
          montoTotal, nombreSevicio, nombreUser, nombreint, numeroContacto, numeroint, pagoEfectivo,
          plin, scrollViewid, servicioProducto, textoMetodoPago, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
